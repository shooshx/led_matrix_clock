#include <Adafruit_GFX.h>

#ifndef ARDUINO
  #define PROGMEM
#endif

const uint8_t HelvRegularRNormal71009648P67WINDOWSANSI20Bitmap[] PROGMEM = {	

	0xC0,0xC0,0xC0,0xC0,0x00,0xC0,	/* 0x21 exclam '!' */
	0xD8,0xD8,	/* 0x22 quotedbl '"' */
	0x66,0xFF,0x66,0x66,0xFF,0x66,	/* 0x23 numbersign '#' */
	0x30,0x7C,0xB0,0x78,0x34,0xF8,0x30,	/* 0x24 dollar '$' */
	0x71,0x80,0xDB,0x00,0x76,0x00,0x0D,0xC0,0x1B,0x60,0x31,0xC0,	/* 0x25 percent '%' */
	0x70,0x00,0xD8,0x00,0x30,0x00,0x6D,0x80,0xC3,0x00,0x7C,0xC0,	/* 0x26 ampersand '&' */
	0xC0,0xC0,	/* 0x27 quotesingle ''' */
	0x60,0xC0,0xC0,0xC0,0xC0,0xC0,0x60,	/* 0x28 parenleft '(' */
	0xC0,0x60,0x60,0x60,0x60,0x60,0xC0,	/* 0x29 parenright ')' */
	0x66,0x3C,0xFF,0x3C,0x66,	/* 0x2A asterisk '*' */
	0x18,0x18,0xFF,0x18,0x18,	/* 0x2B plus '+' */
	0xC0,0x40,	/* 0x2C comma ',' */
	0xE0,	/* 0x2D hyphen '-' */
	0xC0,	/* 0x2E period '.' */
	0x30,0x30,0x60,0x60,0xC0,0xC0,	/* 0x2F slash '/' */
	0x78,0xCC,0xCC,0xCC,0xCC,0x78,	/* 0x30 zero '0' */
	0x30,0xF0,0x30,0x30,0x30,0x30,	/* 0x31 one '1' */
	0xF8,0x0C,0x18,0x30,0x60,0xFC,	/* 0x32 two '2' */
	0xF8,0x0C,0x38,0x0C,0x0C,0xF8,	/* 0x33 three '3' */
	0x38,0x78,0xD8,0xFC,0x18,0x18,	/* 0x34 four '4' */
	0xFC,0xC0,0xF8,0x0C,0x0C,0xF8,	/* 0x35 five '5' */
	0x78,0xC0,0xF8,0xCC,0xCC,0x78,	/* 0x36 six '6' */
	0xFC,0x0C,0x18,0x30,0x60,0x60,	/* 0x37 seven '7' */
	0x78,0xCC,0x78,0xCC,0xCC,0x78,	/* 0x38 eight '8' */
	0x78,0xCC,0xCC,0x7C,0x0C,0x78,	/* 0x39 nine '9' */
	0xC0,0x00,0x00,0x00,0xC0,	/* 0x3A colon ':' */
	0xC0,0x00,0x00,0x00,0xC0,0x40,	/* 0x3B semicolon ';' */
	0x0C,0x30,0xC0,0x30,0x0C,	/* 0x3C less '<' */
	0xFE,0x00,0xFE,	/* 0x3D equal '=' */
	0xC0,0x30,0x0C,0x30,0xC0,	/* 0x3E greater '>' */
	0x78,0xCC,0x18,0x30,0x00,0x30,	/* 0x3F question '?' */
	0x1F,0x80,0x60,0x60,0xCF,0x30,0xD9,0xB0,0xCE,0xE0,0x60,0x00,0x1F,0xC0,	/* 0x40 at '@' */
	0x18,0x3C,0x66,0xFF,0xC3,0xC3,	/* 0x41 A 'A' */
	0xFC,0xC3,0xFE,0xC3,0xC3,0xFC,	/* 0x42 B 'B' */
	0x7E,0xC3,0xC0,0xC0,0xC3,0x7E,	/* 0x43 C 'C' */
	0xFE,0xC3,0xC3,0xC3,0xC3,0xFE,	/* 0x44 D 'D' */
	0xFE,0xC0,0xFC,0xC0,0xC0,0xFE,	/* 0x45 E 'E' */
	0xFE,0xC0,0xFC,0xC0,0xC0,0xC0,	/* 0x46 F 'F' */
	0x7F,0x00,0xC1,0x80,0xC0,0x00,0xC3,0x80,0xC1,0x80,0x7F,0x80,	/* 0x47 G 'G' */
	0xC1,0x80,0xC1,0x80,0xFF,0x80,0xC1,0x80,0xC1,0x80,0xC1,0x80,	/* 0x48 H 'H' */
	0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,	/* 0x49 I 'I' */
	0x0C,0x0C,0x0C,0x0C,0xCC,0x78,	/* 0x4A J 'J' */
	0xC3,0xCC,0xF0,0xF0,0xCC,0xC3,	/* 0x4B K 'K' */
	0xC0,0xC0,0xC0,0xC0,0xC0,0xFC,	/* 0x4C L 'L' */
	0xE1,0xC0,0xF3,0xC0,0xDE,0xC0,0xCC,0xC0,0xC0,0xC0,0xC0,0xC0,	/* 0x4D M 'M' */
	0xE1,0x80,0xF1,0x80,0xD9,0x80,0xCD,0x80,0xC7,0x80,0xC3,0x80,	/* 0x4E N 'N' */
	0x7F,0x00,0xC1,0x80,0xC1,0x80,0xC1,0x80,0xC1,0x80,0x7F,0x00,	/* 0x4F O 'O' */
	0xFE,0xC3,0xC3,0xFE,0xC0,0xC0,	/* 0x50 P 'P' */
	0x7E,0x00,0xC1,0x80,0xC1,0x80,0xCD,0x80,0xC7,0x80,0x7F,0x00,0x01,0x80,	/* 0x51 Q 'Q' */
	0xFE,0xC3,0xC3,0xFC,0xC6,0xC3,	/* 0x52 R 'R' */
	0x7E,0xC0,0x7E,0x03,0x03,0xFE,	/* 0x53 S 'S' */
	0xFC,0x30,0x30,0x30,0x30,0x30,	/* 0x54 T 'T' */
	0xC3,0xC3,0xC3,0xC3,0xC3,0x7E,	/* 0x55 U 'U' */
	0xC3,0xC3,0xC3,0x66,0x3C,0x18,	/* 0x56 V 'V' */
	0xC0,0x30,0xC0,0x30,0xC6,0x30,0x6F,0x60,0x79,0xE0,0x30,0xC0,	/* 0x57 W 'W' */
	0xC6,0x6C,0x38,0x38,0x6C,0xC6,	/* 0x58 X 'X' */
	0xC3,0x66,0x3C,0x18,0x18,0x18,	/* 0x59 Y 'Y' */
	0xFE,0x0C,0x18,0x30,0x60,0xFE,	/* 0x5A Z 'Z' */
	0xF0,0xC0,0xC0,0xC0,0xC0,0xC0,0xF0,	/* 0x5B bracketleft '[' */
	0xC0,0xC0,0x60,0x60,0x30,0x30,	/* 0x5C backslash '\' */
	0xF0,0x30,0x30,0x30,0x30,0x30,0xF0,	/* 0x5D bracketright ']' */
	0x30,0xCC,	/* 0x5E asciicircum '^' */
	0xFE,	/* 0x5F underscore '_' */
	0xC0,0x30,	/* 0x60 grave '`' */
	0x78,0x0C,0x7C,0xCC,0x7C,	/* 0x61 a 'a' */
	0xC0,0xFC,0xC6,0xC6,0xC6,0xFC,	/* 0x62 b 'b' */
	0x78,0xCC,0xC0,0xCC,0x78,	/* 0x63 c 'c' */
	0x06,0x7E,0xC6,0xC6,0xC6,0x7E,	/* 0x64 d 'd' */
	0x78,0xCC,0xFC,0xC0,0x78,	/* 0x65 e 'e' */
	0x30,0x60,0xF0,0x60,0x60,0x60,	/* 0x66 f 'f' */
	0x7E,0xC6,0xC6,0x7E,0x06,0xFC,	/* 0x67 g 'g' */
	0xC0,0xF8,0xCC,0xCC,0xCC,0xCC,	/* 0x68 h 'h' */
	0xC0,0x00,0xC0,0xC0,0xC0,0xC0,0xC0,	/* 0x69 i 'i' */
	0x60,0x00,0x60,0x60,0x60,0x60,0x60,0xC0,	/* 0x6A j 'j' */
	0xC0,0xCC,0xD8,0xF0,0xD8,0xCC,	/* 0x6B k 'k' */
	0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,	/* 0x6C l 'l' */
	0xF6,0xDB,0xDB,0xDB,0xDB,	/* 0x6D m 'm' */
	0xF8,0xCC,0xCC,0xCC,0xCC,	/* 0x6E n 'n' */
	0x7C,0xC6,0xC6,0xC6,0x7C,	/* 0x6F o 'o' */
	0xFC,0xC6,0xC6,0xC6,0xFC,0xC0,	/* 0x70 p 'p' */
	0x7E,0xC6,0xC6,0xC6,0x7E,0x06,	/* 0x71 q 'q' */
	0xF0,0xC0,0xC0,0xC0,0xC0,	/* 0x72 r 'r' */
	0x78,0xC0,0x70,0x18,0xF0,	/* 0x73 s 's' */
	0x60,0xF0,0x60,0x60,0x60,0x70,	/* 0x74 t 't' */
	0xCC,0xCC,0xCC,0xCC,0x7C,	/* 0x75 u 'u' */
	0xCC,0xCC,0xCC,0x78,0x30,	/* 0x76 v 'v' */
	0xDB,0xDB,0xDB,0x66,0x66,	/* 0x77 w 'w' */
	0xCC,0x78,0x30,0x78,0xCC,	/* 0x78 x 'x' */
	0xCC,0xCC,0xCC,0x78,0x30,0xE0,	/* 0x79 y 'y' */
	0xFC,0x18,0x30,0x60,0xFC,	/* 0x7A z 'z' */
	0x38,0x60,0x60,0xC0,0x60,0x60,0x38,	/* 0x7B braceleft '{' */
	0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,	/* 0x7C bar '|' */
	0xE0,0x30,0x30,0x18,0x30,0x30,0xE0,	/* 0x7D braceright '}' */
	0x76,0xDC,	/* 0x7E asciitilde '~' */
	0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,	/* 0x7F uni007F '' */
};


const GFXglyph HelvRegularRNormal71009648P67WINDOWSANSI20Glyph[] PROGMEM = {

/* offset, bit-width, bit-height, advance cursor, x offset, y offset */
	{ 0, 0, 0, 3, 4, 0 }, /* 0x20 space 'No Bitmap Defined' */
	{ 0, 8, 6, 3, 2, 1 }, /* 0x21 exclam '!' */
	{ 6, 8, 2, 6, 2, 1 }, /* 0x22 quotedbl '"' */
	{ 8, 8, 6, 9, 2, 1 }, /* 0x23 numbersign '#' */
	{ 14, 8, 7, 7, 2, 1 }, /* 0x24 dollar '$' */
	{ 21, 16, 6, 12, 2, 1 }, /* 0x25 percent '%' */
	{ 33, 16, 6, 11, 2, 1 }, /* 0x26 ampersand '&' */
	{ 45, 8, 2, 3, 2, 1 }, /* 0x27 quotesingle ''' */
	{ 47, 8, 7, 4, 2, 1 }, /* 0x28 parenleft '(' */
	{ 54, 8, 7, 4, 2, 1 }, /* 0x29 parenright ')' */
	{ 61, 8, 5, 9, 2, 1 }, /* 0x2A asterisk '*' */
	{ 66, 8, 5, 9, 2, 2 }, /* 0x2B plus '+' */
	{ 71, 8, 2, 3, 2, 6 }, /* 0x2C comma ',' */
	{ 73, 8, 1, 4, 2, 4 }, /* 0x2D hyphen '-' */
	{ 74, 8, 1, 3, 2, 6 }, /* 0x2E period '.' */
	{ 75, 8, 6, 5, 2, 1 }, /* 0x2F slash '/' */
	{ 81, 8, 6, 7, 2, 1 }, /* 0x30 zero '0' */
	{ 87, 8, 6, 7, 2, 1 }, /* 0x31 one '1' */
	{ 93, 8, 6, 7, 2, 1 }, /* 0x32 two '2' */
	{ 99, 8, 6, 7, 2, 1 }, /* 0x33 three '3' */
	{ 105, 8, 6, 7, 2, 1 }, /* 0x34 four '4' */
	{ 111, 8, 6, 7, 2, 1 }, /* 0x35 five '5' */
	{ 117, 8, 6, 7, 2, 1 }, /* 0x36 six '6' */
	{ 123, 8, 6, 7, 2, 1 }, /* 0x37 seven '7' */
	{ 129, 8, 6, 7, 2, 1 }, /* 0x38 eight '8' */
	{ 135, 8, 6, 7, 2, 1 }, /* 0x39 nine '9' */
	{ 141, 8, 5, 3, 2, 2 }, /* 0x3A colon ':' */
	{ 146, 8, 6, 3, 2, 2 }, /* 0x3B semicolon ';' */
	{ 152, 8, 5, 7, 2, 2 }, /* 0x3C less '<' */
	{ 157, 8, 3, 8, 2, 3 }, /* 0x3D equal '=' */
	{ 160, 8, 5, 7, 2, 2 }, /* 0x3E greater '>' */
	{ 165, 8, 6, 7, 2, 1 }, /* 0x3F question '?' */
	{ 171, 16, 7, 13, 2, 1 }, /* 0x40 at '@' */
	{ 185, 8, 6, 9, 2, 1 }, /* 0x41 A 'A' */
	{ 191, 8, 6, 9, 2, 1 }, /* 0x42 B 'B' */
	{ 197, 8, 6, 9, 2, 1 }, /* 0x43 C 'C' */
	{ 203, 8, 6, 9, 2, 1 }, /* 0x44 D 'D' */
	{ 209, 8, 6, 8, 2, 1 }, /* 0x45 E 'E' */
	{ 215, 8, 6, 8, 2, 1 }, /* 0x46 F 'F' */
	{ 221, 16, 6, 10, 2, 1 }, /* 0x47 G 'G' */
	{ 233, 16, 6, 10, 2, 1 }, /* 0x48 H 'H' */
	{ 245, 8, 6, 3, 2, 1 }, /* 0x49 I 'I' */
	{ 251, 8, 6, 7, 2, 1 }, /* 0x4A J 'J' */
	{ 257, 8, 6, 9, 2, 1 }, /* 0x4B K 'K' */
	{ 263, 8, 6, 7, 2, 1 }, /* 0x4C L 'L' */
	{ 269, 16, 6, 11, 2, 1 }, /* 0x4D M 'M' */
	{ 281, 16, 6, 10, 2, 1 }, /* 0x4E N 'N' */
	{ 293, 16, 6, 10, 2, 1 }, /* 0x4F O 'O' */
	{ 305, 8, 6, 9, 2, 1 }, /* 0x50 P 'P' */
	{ 311, 16, 7, 10, 2, 1 }, /* 0x51 Q 'Q' */
	{ 325, 8, 6, 9, 2, 1 }, /* 0x52 R 'R' */
	{ 331, 8, 6, 9, 2, 1 }, /* 0x53 S 'S' */
	{ 337, 8, 6, 7, 2, 1 }, /* 0x54 T 'T' */
	{ 343, 8, 6, 9, 2, 1 }, /* 0x55 U 'U' */
	{ 349, 8, 6, 9, 2, 1 }, /* 0x56 V 'V' */
	{ 355, 16, 6, 13, 2, 1 }, /* 0x57 W 'W' */
	{ 367, 8, 6, 8, 2, 1 }, /* 0x58 X 'X' */
	{ 373, 8, 6, 9, 2, 1 }, /* 0x59 Y 'Y' */
	{ 379, 8, 6, 8, 2, 1 }, /* 0x5A Z 'Z' */
	{ 385, 8, 7, 5, 2, 1 }, /* 0x5B bracketleft '[' */
	{ 392, 8, 6, 5, 2, 1 }, /* 0x5C backslash '\' */
	{ 398, 8, 7, 5, 2, 1 }, /* 0x5D bracketright ']' */
	{ 405, 8, 2, 7, 2, 0 }, /* 0x5E asciicircum '^' */
	{ 407, 8, 1, 7, 1, 7 }, /* 0x5F underscore '_' */
	{ 408, 8, 2, 7, 3, 0 }, /* 0x60 grave '`' */
	{ 410, 8, 5, 7, 2, 2 }, /* 0x61 a 'a' */
	{ 415, 8, 6, 8, 2, 1 }, /* 0x62 b 'b' */
	{ 421, 8, 5, 7, 2, 2 }, /* 0x63 c 'c' */
	{ 426, 8, 6, 8, 2, 1 }, /* 0x64 d 'd' */
	{ 432, 8, 5, 7, 2, 2 }, /* 0x65 e 'e' */
	{ 437, 8, 6, 5, 2, 1 }, /* 0x66 f 'f' */
	{ 443, 8, 6, 8, 2, 2 }, /* 0x67 g 'g' */
	{ 449, 8, 6, 7, 2, 1 }, /* 0x68 h 'h' */
	{ 455, 8, 7, 3, 2, 0 }, /* 0x69 i 'i' */
	{ 462, 8, 8, 3, 1, 0 }, /* 0x6A j 'j' */
	{ 470, 8, 6, 7, 2, 1 }, /* 0x6B k 'k' */
	{ 476, 8, 6, 3, 2, 1 }, /* 0x6C l 'l' */
	{ 482, 8, 5, 9, 2, 2 }, /* 0x6D m 'm' */
	{ 487, 8, 5, 7, 2, 2 }, /* 0x6E n 'n' */
	{ 492, 8, 5, 8, 2, 2 }, /* 0x6F o 'o' */
	{ 497, 8, 6, 8, 2, 2 }, /* 0x70 p 'p' */
	{ 503, 8, 6, 8, 2, 2 }, /* 0x71 q 'q' */
	{ 509, 8, 5, 5, 2, 2 }, /* 0x72 r 'r' */
	{ 514, 8, 5, 6, 2, 2 }, /* 0x73 s 's' */
	{ 519, 8, 6, 5, 2, 1 }, /* 0x74 t 't' */
	{ 525, 8, 5, 7, 2, 2 }, /* 0x75 u 'u' */
	{ 530, 8, 5, 7, 2, 2 }, /* 0x76 v 'v' */
	{ 535, 8, 5, 9, 2, 2 }, /* 0x77 w 'w' */
	{ 540, 8, 5, 7, 2, 2 }, /* 0x78 x 'x' */
	{ 545, 8, 6, 7, 2, 2 }, /* 0x79 y 'y' */
	{ 551, 8, 5, 7, 2, 2 }, /* 0x7A z 'z' */
	{ 556, 8, 7, 6, 2, 1 }, /* 0x7B braceleft '{' */
	{ 563, 8, 7, 3, 2, 1 }, /* 0x7C bar '|' */
	{ 570, 8, 7, 6, 2, 1 }, /* 0x7D braceright '}' */
	{ 577, 8, 2, 8, 2, 2 }, /* 0x7E asciitilde '~' */
	{ 579, 8, 6, 4, 2, 1 }, /* 0x7F uni007F '' */
};


const GFXfont HelvRegularRNormal71009648P67WINDOWSANSI20 PROGMEM = {
	(uint8_t *)HelvRegularRNormal71009648P67WINDOWSANSI20Bitmap,
	(GFXglyph *)HelvRegularRNormal71009648P67WINDOWSANSI20Glyph, 
	32, 127, 8 //ASCII start, ASCII stop,y Advance
};

