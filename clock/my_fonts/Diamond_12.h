

#ifndef ARDUINO
  #define PROGMEM
#endif

const uint8_t DiamondRegularRNormal121207272P87ISO88591Bitmap[] PROGMEM = {	

	0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0x00,0xC0,0xC0,	/* 0x21 exclam '!' */
	0xCC,0xCC,0xCC,	/* 0x22 quotedbl '"' */
	0x63,0x00,0x63,0x00,0xFF,0x80,0x63,0x00,0x63,0x00,0xFF,0x80,0x63,0x00,0x63,0x00,	/* 0x23 numbersign '#' */
	0x18,0x7F,0xC0,0x7E,0x03,0xFE,0x18,	/* 0x24 dollar '$' */
	0x70,0xC0,0xD9,0x80,0x73,0x00,0x06,0x00,0x0C,0x00,0x19,0xC0,0x33,0x60,0x61,0xC0,	/* 0x25 percent '%' */
	0x78,0xCC,0xC0,0x77,0xC6,0xC6,0x7C,	/* 0x26 ampersand '&' */
	0xC0,0xC0,0xC0,	/* 0x27 quotesingle ''' */
	0x0E,0x10,0x60,0xC0,0xC0,0xC0,0x60,0x10,0x0E,	/* 0x28 parenleft '(' */
	0xE0,0x10,0x0C,0x06,0x06,0x06,0x0C,0x10,0xE0,	/* 0x29 parenright ')' */
	0x63,0x00,0x36,0x00,0xFF,0x80,0x36,0x00,0x63,0x00,	/* 0x2A asterisk '*' */
	0x18,0x18,0xFF,0x18,0x18,	/* 0x2B plus '+' */
	0x30,0x60,0xC0,	/* 0x2C comma ',' */
	0xFF,	/* 0x2D hyphen '-' */
	0xC0,0xC0,	/* 0x2E period '.' */
	0x00,0x60,0x00,0xC0,0x01,0x80,0x03,0x00,0x06,0x00,0x0C,0x00,0x18,0x00,0x30,0x00,0x60,0x00,0xC0,0x00,	/* 0x2F slash '/' */
	0x7E,0xC3,0xE3,0xD3,0xCB,0xC7,0xC3,0xC3,0x7E,	/* 0x30 zero '0' */
	0x60,0x60,0xE0,0x60,0x60,0x60,0x60,0x60,0x60,	/* 0x31 one '1' */
	0x7C,0x86,0x03,0x06,0x0C,0x18,0x30,0x60,0xFE,	/* 0x32 two '2' */
	0xFC,0x06,0x06,0x3C,0x06,0x06,0x06,0x06,0xFC,	/* 0x33 three '3' */
	0x06,0x06,0x06,0xC6,0xC6,0xFF,0x06,0x06,0x06,	/* 0x34 four '4' */
	0xFE,0xC0,0xC0,0xFC,0x06,0x06,0x06,0x86,0x7C,	/* 0x35 five '5' */
	0x38,0x60,0xC0,0xC0,0xFE,0xC3,0xC3,0xC3,0x7E,	/* 0x36 six '6' */
	0xFE,0x06,0x06,0x0C,0x18,0x30,0x30,0x30,0x30,	/* 0x37 seven '7' */
	0x7E,0xC3,0xC3,0x7E,0xC3,0xC3,0xC3,0xC3,0x7E,	/* 0x38 eight '8' */
	0x7E,0xC3,0xC3,0x7F,0x03,0x03,0x03,0x03,0x03,	/* 0x39 nine '9' */
	0xC0,0xC0,0x00,0x00,0xC0,0xC0,	/* 0x3A colon ':' */
	0x60,0x60,0x00,0x00,0x60,0x60,0x80,	/* 0x3B semicolon ';' */
	0x03,0x80,0x0E,0x00,0x38,0x00,0xE0,0x00,0x38,0x00,0x0E,0x00,0x03,0x80,	/* 0x3C less '<' */
	0xFC,0x00,0x00,0xFC,	/* 0x3D equal '=' */
	0xC0,0x70,0x1C,0x07,0x1C,0x70,0xC0,	/* 0x3E greater '>' */
	0x7E,0xC3,0x03,0x06,0x0C,0x0C,0x00,0x0C,0x0C,	/* 0x3F question '?' */
	0x1F,0x80,0x20,0x40,0x4F,0x20,0x81,0x90,0x8F,0x90,0x99,0x90,0x99,0x90,0x99,0x90,0x4F,0xE0,0x20,0x00,0x1F,0x80,	/* 0x40 at '@' */
	0x7E,0xC3,0xC3,0xC3,0xFF,0xC3,0xC3,0xC3,0xC3,	/* 0x41 A 'A' */
	0xFE,0xC3,0xC3,0xC3,0xFE,0xC3,0xC3,0xC3,0xFE,	/* 0x42 B 'B' */
	0x7E,0xC1,0xC0,0xC0,0xC0,0xC0,0xC0,0xC1,0x7E,	/* 0x43 C 'C' */
	0xFE,0xC3,0xC3,0xC3,0xC3,0xC3,0xC3,0xC3,0xFE,	/* 0x44 D 'D' */
	0xFE,0xC0,0xC0,0xC0,0xF8,0xC0,0xC0,0xC0,0xFE,	/* 0x45 E 'E' */
	0xFE,0xC0,0xC0,0xC0,0xF8,0xC0,0xC0,0xC0,0xC0,	/* 0x46 F 'F' */
	0x7E,0xC1,0xC0,0xC0,0xCF,0xC3,0xC3,0xC3,0x7E,	/* 0x47 G 'G' */
	0xC3,0xC3,0xC3,0xC3,0xFF,0xC3,0xC3,0xC3,0xC3,	/* 0x48 H 'H' */
	0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,	/* 0x49 I 'I' */
	0x06,0x06,0x06,0x06,0x06,0x06,0x06,0x86,0x7C,	/* 0x4A J 'J' */
	0xC3,0xC6,0xCC,0xD8,0xE0,0xD8,0xCC,0xC6,0xC3,	/* 0x4B K 'K' */
	0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xFE,	/* 0x4C L 'L' */
	0x80,0x80,0xC1,0x80,0xE3,0x80,0xF7,0x80,0xDD,0x80,0xC9,0x80,0xC1,0x80,0xC1,0x80,0xC1,0x80,	/* 0x4D M 'M' */
	0x83,0xC3,0xE3,0xF3,0xDB,0xCF,0xC7,0xC3,0xC1,	/* 0x4E N 'N' */
	0x7E,0xC3,0xC3,0xC3,0xC3,0xC3,0xC3,0xC3,0x7E,	/* 0x4F O 'O' */
	0xFE,0xC3,0xC3,0xC3,0xFE,0xC0,0xC0,0xC0,0xC0,	/* 0x50 P 'P' */
	0x7E,0x00,0xC3,0x00,0xC3,0x00,0xC3,0x00,0xC3,0x00,0xC3,0x00,0xC3,0x00,0xC3,0x00,0x7E,0x00,0x03,0x80,	/* 0x51 Q 'Q' */
	0xFE,0xC3,0xC3,0xC3,0xFE,0xC3,0xC3,0xC3,0xC3,	/* 0x52 R 'R' */
	0x7C,0xC2,0xE0,0x70,0x38,0x1C,0x0E,0x86,0x7C,	/* 0x53 S 'S' */
	0xFF,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,	/* 0x54 T 'T' */
	0xC3,0xC3,0xC3,0xC3,0xC3,0xC3,0xC3,0xC3,0x7E,	/* 0x55 U 'U' */
	0xC3,0xC3,0xC3,0x66,0x66,0x3C,0x3C,0x18,0x18,	/* 0x56 V 'V' */
	0xC6,0x30,0xC6,0x30,0xC6,0x30,0xC6,0x30,0xC6,0x30,0xC6,0x30,0xC6,0x30,0xC6,0x30,0xFD,0xE0,	/* 0x57 W 'W' */
	0xC3,0xC3,0xC3,0x66,0x18,0x66,0xC3,0xC3,0xC3,	/* 0x58 X 'X' */
	0xC3,0xC3,0xC3,0xC3,0x7E,0x18,0x18,0x18,0x18,	/* 0x59 Y 'Y' */
	0xFF,0x03,0x06,0x0C,0x18,0x30,0x60,0xC0,0xFF,	/* 0x5A Z 'Z' */
	0xF8,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xF8,	/* 0x5B bracketleft '[' */
	0xC0,0x00,0x60,0x00,0x30,0x00,0x18,0x00,0x0C,0x00,0x06,0x00,0x03,0x00,0x01,0x80,0x00,0xC0,0x00,0x60,	/* 0x5C backslash '\' */
	0xF8,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0xF8,	/* 0x5D bracketright ']' */
	0x18,0x66,0xC3,	/* 0x5E asciicircum '^' */
	0xFF,0x80,	/* 0x5F underscore '_' */
	0xC0,0x60,0x30,	/* 0x60 grave '`' */
	0x7C,0x06,0x7E,0xC6,0xC6,0x7E,	/* 0x61 a 'a' */
	0xC0,0xC0,0xC0,0xFC,0xC6,0xC6,0xC6,0xC6,0xFC,	/* 0x62 b 'b' */
	0x7C,0xC2,0xC0,0xC0,0xC2,0x7C,	/* 0x63 c 'c' */
	0x06,0x06,0x06,0x7E,0xC6,0xC6,0xC6,0xC6,0x7E,	/* 0x64 d 'd' */
	0x7C,0xC6,0xFE,0xC0,0xC6,0x7C,	/* 0x65 e 'e' */
	0x1C,0x30,0xFC,0x30,0x30,0x30,0x30,0x30,0x30,	/* 0x66 f 'f' */
	0x7E,0xC6,0xC6,0xC6,0xC6,0x7E,0x06,0x86,0x7C,	/* 0x67 g 'g' */
	0xC0,0xC0,0xC0,0xFC,0xC6,0xC6,0xC6,0xC6,0xC6,	/* 0x68 h 'h' */
	0xC0,0x00,0x00,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,	/* 0x69 i 'i' */
	0xC0,0x00,0x00,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,	/* 0x6A j 'j' */
	0xC0,0xC0,0xC0,0xCC,0xD8,0xF0,0xD8,0xCC,0xC6,	/* 0x6B k 'k' */
	0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,	/* 0x6C l 'l' */
	0xFF,0x80,0xCC,0xC0,0xCC,0xC0,0xCC,0xC0,0xCC,0xC0,0xCC,0xC0,	/* 0x6D m 'm' */
	0xFC,0xC6,0xC6,0xC6,0xC6,0xC6,	/* 0x6E n 'n' */
	0x7C,0xC6,0xC6,0xC6,0xC6,0x7C,	/* 0x6F o 'o' */
	0xFC,0xC6,0xC6,0xC6,0xC6,0xFC,0xC0,0xC0,0xC0,	/* 0x70 p 'p' */
	0x7C,0xC6,0xC6,0xC6,0xC6,0x7E,0x06,0x06,0x06,	/* 0x71 q 'q' */
	0xDE,0xE1,0xC0,0xC0,0xC0,0xC0,	/* 0x72 r 'r' */
	0x7C,0xC2,0x70,0x1C,0x86,0x7C,	/* 0x73 s 's' */
	0x30,0x30,0xFC,0x30,0x30,0x30,0x30,0x30,0x18,	/* 0x74 t 't' */
	0xC6,0xC6,0xC6,0xC6,0xC6,0x7E,	/* 0x75 u 'u' */
	0xC3,0xC3,0x66,0x3C,0x18,0x18,	/* 0x76 v 'v' */
	0xCC,0xC0,0xCC,0xC0,0xCC,0xC0,0xCC,0xC0,0xCC,0xC0,0xFF,0x80,	/* 0x77 w 'w' */
	0xC3,0x66,0x3C,0x66,0xC3,0xC3,	/* 0x78 x 'x' */
	0xC6,0xC6,0xC6,0xC6,0xC6,0x7E,0x06,0x86,0x7C,	/* 0x79 y 'y' */
	0xFE,0x0C,0x18,0x30,0x60,0xFE,	/* 0x7A z 'z' */
	0x1C,0x30,0x30,0xE0,0x30,0x30,0x1C,	/* 0x7B braceleft '{' */
	0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,	/* 0x7C bar '|' */
	0xE0,0x30,0x30,0x1C,0x30,0x30,0xE0,	/* 0x7D braceright '}' */
	0x39,0x80,0xCE,0x00,	/* 0x7E asciitilde '~' */
	0xCC,0xCC,0x33,0x30,0xCC,0xCC,0x33,0x30,0xCC,0xCC,0x33,0x30,0xCC,0xCC,0x33,0x30,0xCC,0xCC,0x33,0x30,0xCC,0xCC,0x33,0x30,	/* 0x7F char7F '' */
};


const GFXglyph DiamondRegularRNormal121207272P87ISO88591Glyph[] PROGMEM = {

/* offset, bit-width, bit-height, advance cursor, x offset, y offset */
	{ 0, 0, 0, 9, 10, 12 }, /* 0x20 space 'No Bitmap Defined' */
	{ 0, 8, 9, 5, 2, 0 }, /* 0x21 exclam '!' */
	{ 9, 8, 3, 7, 1, 0 }, /* 0x22 quotedbl '"' */
	{ 12, 16, 8, 10, 1, 0 }, /* 0x23 numbersign '#' */
	{ 28, 8, 7, 9, 1, 0 }, /* 0x24 dollar '$' */
	{ 35, 16, 8, 12, 1, 0 }, /* 0x25 percent '%' */
	{ 51, 8, 7, 9, 1, 2 }, /* 0x26 ampersand '&' */
	{ 58, 8, 3, 5, 2, 0 }, /* 0x27 quotesingle ''' */
	{ 61, 8, 9, 8, 1, 0 }, /* 0x28 parenleft '(' */
	{ 70, 8, 9, 8, 1, 0 }, /* 0x29 parenright ')' */
	{ 79, 16, 5, 10, 1, 2 }, /* 0x2A asterisk '*' */
	{ 89, 8, 5, 9, 1, 2 }, /* 0x2B plus '+' */
	{ 94, 8, 3, 6, 2, 7 }, /* 0x2C comma ',' */
	{ 97, 8, 1, 9, 1, 4 }, /* 0x2D hyphen '-' */
	{ 98, 8, 2, 5, 2, 7 }, /* 0x2E period '.' */
	{ 100, 16, 10, 12, 1, 0 }, /* 0x2F slash '/' */
	{ 120, 8, 9, 9, 1, 0 }, /* 0x30 zero '0' */
	{ 129, 8, 9, 6, 2, 0 }, /* 0x31 one '1' */
	{ 138, 8, 9, 9, 1, 0 }, /* 0x32 two '2' */
	{ 147, 8, 9, 8, 1, 0 }, /* 0x33 three '3' */
	{ 156, 8, 9, 9, 1, 0 }, /* 0x34 four '4' */
	{ 165, 8, 9, 8, 1, 0 }, /* 0x35 five '5' */
	{ 174, 8, 9, 9, 1, 0 }, /* 0x36 six '6' */
	{ 183, 8, 9, 8, 1, 0 }, /* 0x37 seven '7' */
	{ 192, 8, 9, 9, 1, 0 }, /* 0x38 eight '8' */
	{ 201, 8, 9, 9, 1, 0 }, /* 0x39 nine '9' */
	{ 210, 8, 6, 5, 2, 3 }, /* 0x3A colon ':' */
	{ 216, 8, 7, 6, 2, 3 }, /* 0x3B semicolon ';' */
	{ 223, 16, 7, 10, 1, 1 }, /* 0x3C less '<' */
	{ 237, 8, 4, 7, 1, 3 }, /* 0x3D equal '=' */
	{ 241, 8, 7, 9, 1, 1 }, /* 0x3E greater '>' */
	{ 248, 8, 9, 11, 2, 0 }, /* 0x3F question '?' */
	{ 257, 16, 11, 13, 1, 0 }, /* 0x40 at '@' */
	{ 279, 8, 9, 9, 1, 0 }, /* 0x41 A 'A' */
	{ 288, 8, 9, 9, 1, 0 }, /* 0x42 B 'B' */
	{ 297, 8, 9, 9, 1, 0 }, /* 0x43 C 'C' */
	{ 306, 8, 9, 9, 1, 0 }, /* 0x44 D 'D' */
	{ 315, 8, 9, 8, 1, 0 }, /* 0x45 E 'E' */
	{ 324, 8, 9, 8, 1, 0 }, /* 0x46 F 'F' */
	{ 333, 8, 9, 9, 1, 0 }, /* 0x47 G 'G' */
	{ 342, 8, 9, 9, 1, 0 }, /* 0x48 H 'H' */
	{ 351, 8, 9, 5, 2, 0 }, /* 0x49 I 'I' */
	{ 360, 8, 9, 8, 1, 0 }, /* 0x4A J 'J' */
	{ 369, 8, 9, 9, 1, 0 }, /* 0x4B K 'K' */
	{ 378, 8, 9, 8, 1, 0 }, /* 0x4C L 'L' */
	{ 387, 16, 9, 10, 1, 0 }, /* 0x4D M 'M' */
	{ 405, 8, 9, 9, 1, 0 }, /* 0x4E N 'N' */
	{ 414, 8, 9, 9, 1, 0 }, /* 0x4F O 'O' */
	{ 423, 8, 9, 9, 1, 0 }, /* 0x50 P 'P' */
	{ 432, 16, 10, 10, 1, 0 }, /* 0x51 Q 'Q' */
	{ 452, 8, 9, 9, 1, 0 }, /* 0x52 R 'R' */
	{ 461, 8, 9, 8, 1, 0 }, /* 0x53 S 'S' */
	{ 470, 8, 9, 9, 1, 0 }, /* 0x54 T 'T' */
	{ 479, 8, 9, 9, 1, 0 }, /* 0x55 U 'U' */
	{ 488, 8, 9, 9, 1, 0 }, /* 0x56 V 'V' */
	{ 497, 16, 9, 13, 1, 0 }, /* 0x57 W 'W' */
	{ 515, 8, 9, 9, 1, 0 }, /* 0x58 X 'X' */
	{ 524, 8, 9, 9, 1, 0 }, /* 0x59 Y 'Y' */
	{ 533, 8, 9, 9, 1, 0 }, /* 0x5A Z 'Z' */
	{ 542, 8, 12, 6, 1, 0 }, /* 0x5B bracketleft '[' */
	{ 554, 16, 10, 12, 1, 0 }, /* 0x5C backslash '\' */
	{ 574, 8, 12, 6, 1, 0 }, /* 0x5D bracketright ']' */
	{ 586, 8, 3, 9, 1, 0 }, /* 0x5E asciicircum '^' */
	{ 589, 16, 1, 10, 1, 9 }, /* 0x5F underscore '_' */
	{ 591, 8, 3, 7, 2, 0 }, /* 0x60 grave '`' */
	{ 594, 8, 6, 8, 1, 3 }, /* 0x61 a 'a' */
	{ 600, 8, 9, 8, 1, 0 }, /* 0x62 b 'b' */
	{ 609, 8, 6, 8, 1, 3 }, /* 0x63 c 'c' */
	{ 615, 8, 9, 8, 1, 0 }, /* 0x64 d 'd' */
	{ 624, 8, 6, 8, 1, 3 }, /* 0x65 e 'e' */
	{ 630, 8, 9, 9, 2, 0 }, /* 0x66 f 'f' */
	{ 639, 8, 9, 8, 1, 3 }, /* 0x67 g 'g' */
	{ 648, 8, 9, 8, 1, 0 }, /* 0x68 h 'h' */
	{ 657, 8, 9, 5, 2, 0 }, /* 0x69 i 'i' */
	{ 666, 8, 12, 5, 2, 0 }, /* 0x6A j 'j' */
	{ 678, 8, 9, 8, 1, 0 }, /* 0x6B k 'k' */
	{ 687, 8, 9, 5, 2, 0 }, /* 0x6C l 'l' */
	{ 696, 16, 6, 11, 1, 3 }, /* 0x6D m 'm' */
	{ 708, 8, 6, 8, 1, 3 }, /* 0x6E n 'n' */
	{ 714, 8, 6, 8, 1, 3 }, /* 0x6F o 'o' */
	{ 720, 8, 9, 8, 1, 3 }, /* 0x70 p 'p' */
	{ 729, 8, 9, 8, 1, 3 }, /* 0x71 q 'q' */
	{ 738, 8, 6, 9, 1, 3 }, /* 0x72 r 'r' */
	{ 744, 8, 6, 8, 1, 3 }, /* 0x73 s 's' */
	{ 750, 8, 9, 9, 2, 0 }, /* 0x74 t 't' */
	{ 759, 8, 6, 8, 1, 3 }, /* 0x75 u 'u' */
	{ 765, 8, 6, 9, 1, 3 }, /* 0x76 v 'v' */
	{ 771, 16, 6, 11, 1, 3 }, /* 0x77 w 'w' */
	{ 783, 8, 6, 9, 1, 3 }, /* 0x78 x 'x' */
	{ 789, 8, 9, 8, 1, 3 }, /* 0x79 y 'y' */
	{ 798, 8, 6, 8, 1, 3 }, /* 0x7A z 'z' */
	{ 804, 8, 7, 7, 1, 1 }, /* 0x7B braceleft '{' */
	{ 811, 8, 12, 5, 2, 0 }, /* 0x7C bar '|' */
	{ 823, 8, 7, 7, 1, 1 }, /* 0x7D braceright '}' */
	{ 830, 16, 2, 10, 1, 0 }, /* 0x7E asciitilde '~' */
	{ 834, 16, 12, 14, 1, 0 }, /* 0x7F char7F '' */
};


const GFXfont DiamondRegularRNormal121207272P87ISO88591 PROGMEM = {
	(uint8_t *)DiamondRegularRNormal121207272P87ISO88591Bitmap,
	(GFXglyph *)DiamondRegularRNormal121207272P87ISO88591Glyph, 
	32, 127, 12 //ASCII start, ASCII stop,y Advance
};

