

#ifndef ARDUINO
  #define PROGMEM
#endif

const uint8_t MicroKnightRegularRNormal8807272C80ISO88591Bitmap[] PROGMEM = {	

	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* 0x20 space ' ' */
	0x18,0x18,0x18,0x18,0x18,0x00,0x18,0x00,	/* 0x21 exclam '!' */
	0x6C,0x6C,0x24,0x00,0x00,0x00,0x00,0x00,	/* 0x22 quotedbl '"' */
	0x6C,0x6C,0xFE,0x6C,0xFE,0x6C,0x6C,0x00,	/* 0x23 numbersign '#' */
	0x10,0x7C,0xD0,0x7C,0x16,0x16,0x7C,0x10,	/* 0x24 dollar '$' */
	0x60,0x96,0x7C,0x18,0x30,0x6C,0xD2,0x0C,	/* 0x25 percent '%' */
	0x70,0xD8,0x70,0xF6,0xDC,0xD8,0x7C,0x06,	/* 0x26 ampersand '&' */
	0x30,0x30,0x10,0x20,0x00,0x00,0x00,0x00,	/* 0x27 quotesingle ''' */
	0x18,0x30,0x60,0x60,0x60,0x30,0x18,0x00,	/* 0x28 parenleft '(' */
	0x30,0x18,0x0C,0x0C,0x0C,0x18,0x30,0x00,	/* 0x29 parenright ')' */
	0x00,0x6C,0x38,0xFE,0x38,0x6C,0x00,0x00,	/* 0x2A asterisk '*' */
	0x00,0x18,0x18,0x7E,0x18,0x18,0x00,0x00,	/* 0x2B plus '+' */
	0x00,0x00,0x00,0x00,0x30,0x30,0x10,0x20,	/* 0x2C comma ',' */
	0x00,0x00,0x00,0x7C,0x00,0x00,0x00,0x00,	/* 0x2D hyphen '-' */
	0x00,0x00,0x00,0x00,0x00,0x30,0x30,0x00,	/* 0x2E period '.' */
	0x00,0x06,0x0C,0x18,0x30,0x60,0xC0,0x00,	/* 0x2F slash '/' */
	0x00,0x78,0xCC,0xDE,0xF6,0xE6,0x7C,0x00,	/* 0x30 zero '0' */
	0x18,0x18,0x38,0x18,0x18,0x18,0x7E,0x00,	/* 0x31 one '1' */
	0x7C,0x06,0x3C,0x60,0xC0,0xC0,0xFE,0x00,	/* 0x32 two '2' */
	0x3C,0x06,0x1C,0x06,0x46,0xC6,0x7C,0x00,	/* 0x33 three '3' */
	0x18,0x18,0x30,0x6C,0xCC,0xFE,0x0C,0x00,	/* 0x34 four '4' */
	0xF8,0xC0,0xFC,0x06,0x46,0xCC,0x78,0x00,	/* 0x35 five '5' */
	0x70,0xC0,0xFC,0xC6,0xC6,0xCC,0x78,0x00,	/* 0x36 six '6' */
	0xFE,0x06,0x0C,0x18,0x18,0x18,0x18,0x00,	/* 0x37 seven '7' */
	0x78,0xCC,0x7C,0xC6,0xC6,0xCC,0x78,0x00,	/* 0x38 eight '8' */
	0x78,0xCC,0xC6,0xC6,0x7E,0x06,0x1C,0x00,	/* 0x39 nine '9' */
	0x00,0x00,0x30,0x30,0x00,0x30,0x30,0x00,	/* 0x3A colon ':' */
	0x00,0x00,0x30,0x30,0x00,0x30,0x10,0x20,	/* 0x3B semicolon ';' */
	0x00,0x18,0x30,0x60,0x30,0x18,0x00,0x00,	/* 0x3C less '<' */
	0x00,0x00,0x7C,0x00,0x00,0x7C,0x00,0x00,	/* 0x3D equal '=' */
	0x00,0x30,0x18,0x0C,0x18,0x30,0x00,0x00,	/* 0x3E greater '>' */
	0x7C,0xC6,0x06,0x3C,0x30,0x00,0x30,0x00,	/* 0x3F question '?' */
	0x38,0x6C,0xDE,0xF6,0xDE,0xC0,0x66,0x3C,	/* 0x40 at '@' */
	0x78,0xCC,0xC6,0xFE,0xC6,0xC6,0xC6,0x00,	/* 0x41 A 'A' */
	0xF8,0xCC,0xFC,0xC6,0xC6,0xCC,0xF8,0x00,	/* 0x42 B 'B' */
	0x78,0xCC,0xC0,0xC0,0xC0,0xC6,0x7C,0x00,	/* 0x43 C 'C' */
	0xF8,0xCC,0xC6,0xC6,0xC6,0xC6,0xFC,0x00,	/* 0x44 D 'D' */
	0xFE,0xC0,0xFC,0xC0,0xC0,0xC0,0xFE,0x00,	/* 0x45 E 'E' */
	0xFE,0xC0,0xFC,0xC0,0xC0,0xC0,0xC0,0x00,	/* 0x46 F 'F' */
	0x38,0x60,0xC0,0xCE,0xC6,0xC6,0x7E,0x06,	/* 0x47 G 'G' */
	0xC6,0xC6,0xC6,0xFE,0xC6,0xC6,0xC6,0x00,	/* 0x48 H 'H' */
	0x7E,0x18,0x18,0x18,0x18,0x18,0x7E,0x00,	/* 0x49 I 'I' */
	0x0E,0x06,0x06,0x06,0xC6,0xC6,0x7C,0x00,	/* 0x4A J 'J' */
	0xC6,0xCC,0xD8,0xF0,0xD8,0xCC,0xC6,0x00,	/* 0x4B K 'K' */
	0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xFE,0x00,	/* 0x4C L 'L' */
	0xC6,0xEE,0xFE,0xD6,0xC6,0xC6,0xC6,0x00,	/* 0x4D M 'M' */
	0xC6,0xE6,0xF6,0xDE,0xCE,0xC6,0xC6,0x00,	/* 0x4E N 'N' */
	0x78,0xCC,0xC6,0xC6,0xC6,0xC6,0x7C,0x00,	/* 0x4F O 'O' */
	0xF8,0xCC,0xC6,0xC6,0xFC,0xC0,0xC0,0x00,	/* 0x50 P 'P' */
	0x78,0xCC,0xC6,0xC6,0xC6,0xD6,0x7C,0x0C,	/* 0x51 Q 'Q' */
	0xF8,0xCC,0xC6,0xC6,0xFC,0xD8,0xCC,0x06,	/* 0x52 R 'R' */
	0x78,0xC0,0x7C,0x06,0x46,0xC6,0x7C,0x00,	/* 0x53 S 'S' */
	0x7E,0x18,0x18,0x18,0x18,0x18,0x18,0x00,	/* 0x54 T 'T' */
	0xC6,0xC6,0xC6,0xC6,0xC6,0xC6,0x7C,0x00,	/* 0x55 U 'U' */
	0xC6,0xC6,0xC6,0x6C,0x6C,0x38,0x38,0x00,	/* 0x56 V 'V' */
	0xC6,0xC6,0xC6,0xD6,0xFE,0xEE,0xC6,0x00,	/* 0x57 W 'W' */
	0xC6,0x6C,0x38,0x38,0x6C,0xC6,0xC6,0x00,	/* 0x58 X 'X' */
	0xC6,0xC6,0xC6,0x7C,0x0C,0x0C,0x0C,0x00,	/* 0x59 Y 'Y' */
	0xFE,0x0C,0x18,0x30,0x60,0xC0,0xFE,0x00,	/* 0x5A Z 'Z' */
	0x38,0x30,0x30,0x30,0x30,0x30,0x38,0x00,	/* 0x5B bracketleft '[' */
	0x00,0xC0,0x60,0x30,0x18,0x0C,0x06,0x00,	/* 0x5C backslash '\' */
	0x38,0x18,0x18,0x18,0x18,0x18,0x38,0x00,	/* 0x5D bracketright ']' */
	0x10,0x38,0x6C,0x00,0x00,0x00,0x00,0x00,	/* 0x5E asciicircum '^' */
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFE,	/* 0x5F underscore '_' */
	0x30,0x30,0x20,0x10,0x00,0x00,0x00,0x00,	/* 0x60 grave '`' */
	0x00,0x3C,0x06,0x7E,0xC6,0xC6,0x7E,0x00,	/* 0x61 a 'a' */
	0xC0,0xF8,0xCC,0xC6,0xC6,0xC6,0xFC,0x00,	/* 0x62 b 'b' */
	0x00,0x78,0xCC,0xC0,0xC0,0xC6,0x7C,0x00,	/* 0x63 c 'c' */
	0x06,0x3E,0x66,0xC6,0xC6,0xC6,0x7E,0x00,	/* 0x64 d 'd' */
	0x00,0x78,0xCC,0xFC,0xC0,0xC6,0x7C,0x00,	/* 0x65 e 'e' */
	0x38,0x6C,0x60,0x78,0x60,0x60,0x60,0x60,	/* 0x66 f 'f' */
	0x00,0x7E,0xC6,0xC6,0xC6,0x7E,0x06,0x7C,	/* 0x67 g 'g' */
	0xC0,0xF8,0xCC,0xC6,0xC6,0xC6,0xC6,0x00,	/* 0x68 h 'h' */
	0x18,0x00,0x38,0x18,0x18,0x18,0x7E,0x00,	/* 0x69 i 'i' */
	0x0C,0x00,0x1C,0x0C,0x0C,0x0C,0x4C,0x38,	/* 0x6A j 'j' */
	0xC0,0xCC,0xD8,0xF0,0xD8,0xCC,0xC6,0x00,	/* 0x6B k 'k' */
	0x38,0x18,0x18,0x18,0x18,0x18,0x7E,0x00,	/* 0x6C l 'l' */
	0x00,0xC4,0xEE,0xFE,0xD6,0xC6,0xC6,0x00,	/* 0x6D m 'm' */
	0x00,0xF8,0xCC,0xC6,0xC6,0xC6,0xC6,0x00,	/* 0x6E n 'n' */
	0x00,0x78,0xCC,0xC6,0xC6,0xC6,0x7C,0x00,	/* 0x6F o 'o' */
	0x00,0xF8,0xCC,0xC6,0xC6,0xC6,0xFC,0xC0,	/* 0x70 p 'p' */
	0x00,0x3E,0x66,0xC6,0xC6,0xC6,0x7E,0x06,	/* 0x71 q 'q' */
	0x00,0xFC,0xC6,0xC0,0xC0,0xC0,0xC0,0x00,	/* 0x72 r 'r' */
	0x00,0x78,0xC0,0x7C,0x06,0xC6,0x7C,0x00,	/* 0x73 s 's' */
	0x30,0x7C,0x30,0x30,0x30,0x32,0x1C,0x00,	/* 0x74 t 't' */
	0x00,0xC6,0xC6,0xC6,0xC6,0xC6,0x7E,0x00,	/* 0x75 u 'u' */
	0x00,0xC6,0xC6,0x6C,0x6C,0x38,0x38,0x00,	/* 0x76 v 'v' */
	0x00,0xC6,0xD6,0xFE,0x7C,0x6C,0x44,0x00,	/* 0x77 w 'w' */
	0x00,0xC6,0x6C,0x38,0x38,0x6C,0xC6,0x00,	/* 0x78 x 'x' */
	0x00,0xC6,0xC6,0xC6,0xC6,0x7E,0x06,0x7C,	/* 0x79 y 'y' */
	0x00,0xFE,0x0C,0x18,0x30,0x60,0xFE,0x00,	/* 0x7A z 'z' */
	0x0C,0x18,0x18,0x30,0x18,0x18,0x0C,0x00,	/* 0x7B braceleft '{' */
	0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,	/* 0x7C bar '|' */
	0x30,0x18,0x18,0x0C,0x18,0x18,0x30,0x00,	/* 0x7D braceright '}' */
	0x72,0x9C,0x00,0x00,0x00,0x00,0x00,0x00,	/* 0x7E asciitilde '~' */
	0x38,0x70,0xE0,0xC1,0x83,0x07,0x0E,0x1C,	/* 0x7F char7F '' */
};


const GFXglyph MicroKnightRegularRNormal8807272C80ISO88591Glyph[] PROGMEM = {

/* offset, bit-width, bit-height, advance cursor, x offset, y offset */
	{ 0, 8, 8, 8, 1, 0 }, /* 0x20 space ' ' */
	{ 8, 8, 8, 8, 1, 0 }, /* 0x21 exclam '!' */
	{ 16, 8, 8, 8, 1, 0 }, /* 0x22 quotedbl '"' */
	{ 24, 8, 8, 8, 1, 0 }, /* 0x23 numbersign '#' */
	{ 32, 8, 8, 8, 1, 0 }, /* 0x24 dollar '$' */
	{ 40, 8, 8, 8, 1, 0 }, /* 0x25 percent '%' */
	{ 48, 8, 8, 8, 1, 0 }, /* 0x26 ampersand '&' */
	{ 56, 8, 8, 8, 1, 0 }, /* 0x27 quotesingle ''' */
	{ 64, 8, 8, 8, 1, 0 }, /* 0x28 parenleft '(' */
	{ 72, 8, 8, 8, 1, 0 }, /* 0x29 parenright ')' */
	{ 80, 8, 8, 8, 1, 0 }, /* 0x2A asterisk '*' */
	{ 88, 8, 8, 8, 1, 0 }, /* 0x2B plus '+' */
	{ 96, 8, 8, 8, 1, 0 }, /* 0x2C comma ',' */
	{ 104, 8, 8, 8, 1, 0 }, /* 0x2D hyphen '-' */
	{ 112, 8, 8, 8, 1, 0 }, /* 0x2E period '.' */
	{ 120, 8, 8, 8, 1, 0 }, /* 0x2F slash '/' */
	{ 128, 8, 8, 8, 1, 0 }, /* 0x30 zero '0' */
	{ 136, 8, 8, 8, 1, 0 }, /* 0x31 one '1' */
	{ 144, 8, 8, 8, 1, 0 }, /* 0x32 two '2' */
	{ 152, 8, 8, 8, 1, 0 }, /* 0x33 three '3' */
	{ 160, 8, 8, 8, 1, 0 }, /* 0x34 four '4' */
	{ 168, 8, 8, 8, 1, 0 }, /* 0x35 five '5' */
	{ 176, 8, 8, 8, 1, 0 }, /* 0x36 six '6' */
	{ 184, 8, 8, 8, 1, 0 }, /* 0x37 seven '7' */
	{ 192, 8, 8, 8, 1, 0 }, /* 0x38 eight '8' */
	{ 200, 8, 8, 8, 1, 0 }, /* 0x39 nine '9' */
	{ 208, 8, 8, 8, 1, 0 }, /* 0x3A colon ':' */
	{ 216, 8, 8, 8, 1, 0 }, /* 0x3B semicolon ';' */
	{ 224, 8, 8, 8, 1, 0 }, /* 0x3C less '<' */
	{ 232, 8, 8, 8, 1, 0 }, /* 0x3D equal '=' */
	{ 240, 8, 8, 8, 1, 0 }, /* 0x3E greater '>' */
	{ 248, 8, 8, 8, 1, 0 }, /* 0x3F question '?' */
	{ 256, 8, 8, 8, 1, 0 }, /* 0x40 at '@' */
	{ 264, 8, 8, 8, 1, 0 }, /* 0x41 A 'A' */
	{ 272, 8, 8, 8, 1, 0 }, /* 0x42 B 'B' */
	{ 280, 8, 8, 8, 1, 0 }, /* 0x43 C 'C' */
	{ 288, 8, 8, 8, 1, 0 }, /* 0x44 D 'D' */
	{ 296, 8, 8, 8, 1, 0 }, /* 0x45 E 'E' */
	{ 304, 8, 8, 8, 1, 0 }, /* 0x46 F 'F' */
	{ 312, 8, 8, 8, 1, 0 }, /* 0x47 G 'G' */
	{ 320, 8, 8, 8, 1, 0 }, /* 0x48 H 'H' */
	{ 328, 8, 8, 8, 1, 0 }, /* 0x49 I 'I' */
	{ 336, 8, 8, 8, 1, 0 }, /* 0x4A J 'J' */
	{ 344, 8, 8, 8, 1, 0 }, /* 0x4B K 'K' */
	{ 352, 8, 8, 8, 1, 0 }, /* 0x4C L 'L' */
	{ 360, 8, 8, 8, 1, 0 }, /* 0x4D M 'M' */
	{ 368, 8, 8, 8, 1, 0 }, /* 0x4E N 'N' */
	{ 376, 8, 8, 8, 1, 0 }, /* 0x4F O 'O' */
	{ 384, 8, 8, 8, 1, 0 }, /* 0x50 P 'P' */
	{ 392, 8, 8, 8, 1, 0 }, /* 0x51 Q 'Q' */
	{ 400, 8, 8, 8, 1, 0 }, /* 0x52 R 'R' */
	{ 408, 8, 8, 8, 1, 0 }, /* 0x53 S 'S' */
	{ 416, 8, 8, 8, 1, 0 }, /* 0x54 T 'T' */
	{ 424, 8, 8, 8, 1, 0 }, /* 0x55 U 'U' */
	{ 432, 8, 8, 8, 1, 0 }, /* 0x56 V 'V' */
	{ 440, 8, 8, 8, 1, 0 }, /* 0x57 W 'W' */
	{ 448, 8, 8, 8, 1, 0 }, /* 0x58 X 'X' */
	{ 456, 8, 8, 8, 1, 0 }, /* 0x59 Y 'Y' */
	{ 464, 8, 8, 8, 1, 0 }, /* 0x5A Z 'Z' */
	{ 472, 8, 8, 8, 1, 0 }, /* 0x5B bracketleft '[' */
	{ 480, 8, 8, 8, 1, 0 }, /* 0x5C backslash '\' */
	{ 488, 8, 8, 8, 1, 0 }, /* 0x5D bracketright ']' */
	{ 496, 8, 8, 8, 1, 0 }, /* 0x5E asciicircum '^' */
	{ 504, 8, 8, 8, 1, 0 }, /* 0x5F underscore '_' */
	{ 512, 8, 8, 8, 1, 0 }, /* 0x60 grave '`' */
	{ 520, 8, 8, 8, 1, 0 }, /* 0x61 a 'a' */
	{ 528, 8, 8, 8, 1, 0 }, /* 0x62 b 'b' */
	{ 536, 8, 8, 8, 1, 0 }, /* 0x63 c 'c' */
	{ 544, 8, 8, 8, 1, 0 }, /* 0x64 d 'd' */
	{ 552, 8, 8, 8, 1, 0 }, /* 0x65 e 'e' */
	{ 560, 8, 8, 8, 1, 0 }, /* 0x66 f 'f' */
	{ 568, 8, 8, 8, 1, 0 }, /* 0x67 g 'g' */
	{ 576, 8, 8, 8, 1, 0 }, /* 0x68 h 'h' */
	{ 584, 8, 8, 8, 1, 0 }, /* 0x69 i 'i' */
	{ 592, 8, 8, 8, 1, 0 }, /* 0x6A j 'j' */
	{ 600, 8, 8, 8, 1, 0 }, /* 0x6B k 'k' */
	{ 608, 8, 8, 8, 1, 0 }, /* 0x6C l 'l' */
	{ 616, 8, 8, 8, 1, 0 }, /* 0x6D m 'm' */
	{ 624, 8, 8, 8, 1, 0 }, /* 0x6E n 'n' */
	{ 632, 8, 8, 8, 1, 0 }, /* 0x6F o 'o' */
	{ 640, 8, 8, 8, 1, 0 }, /* 0x70 p 'p' */
	{ 648, 8, 8, 8, 1, 0 }, /* 0x71 q 'q' */
	{ 656, 8, 8, 8, 1, 0 }, /* 0x72 r 'r' */
	{ 664, 8, 8, 8, 1, 0 }, /* 0x73 s 's' */
	{ 672, 8, 8, 8, 1, 0 }, /* 0x74 t 't' */
	{ 680, 8, 8, 8, 1, 0 }, /* 0x75 u 'u' */
	{ 688, 8, 8, 8, 1, 0 }, /* 0x76 v 'v' */
	{ 696, 8, 8, 8, 1, 0 }, /* 0x77 w 'w' */
	{ 704, 8, 8, 8, 1, 0 }, /* 0x78 x 'x' */
	{ 712, 8, 8, 8, 1, 0 }, /* 0x79 y 'y' */
	{ 720, 8, 8, 8, 1, 0 }, /* 0x7A z 'z' */
	{ 728, 8, 8, 8, 1, 0 }, /* 0x7B braceleft '{' */
	{ 736, 8, 8, 8, 1, 0 }, /* 0x7C bar '|' */
	{ 744, 8, 8, 8, 1, 0 }, /* 0x7D braceright '}' */
	{ 752, 8, 8, 8, 1, 0 }, /* 0x7E asciitilde '~' */
	{ 760, 8, 8, 8, 1, 0 }, /* 0x7F char7F '' */
};


const GFXfont MicroKnightRegularRNormal8807272C80ISO88591 PROGMEM = {
	(uint8_t *)MicroKnightRegularRNormal8807272C80ISO88591Bitmap,
	(GFXglyph *)MicroKnightRegularRNormal8807272C80ISO88591Glyph, 
	32, 127, 8 //ASCII start, ASCII stop,y Advance
};

