#include <Adafruit_GFX.h>

#ifndef ARDUINO
  #define PROGMEM
#endif

const uint8_t System08RegularRNormal6805454C60ATARISTBitmap[] PROGMEM = {	

	0x00,0x00,0x00,0x00,0x00,0x00,	/* 0x20 space ' ' */
	0x30,0x30,0x30,0x30,0x00,0x30,	/* 0x21 exclam '!' */
	0xD8,0xD8,0x90,0x00,0x00,0x00,	/* 0x22 quotedbl '"' */
	0x50,0xF8,0x50,0xF8,0x50,0x00,	/* 0x23 numbersign '#' */
	0x78,0xA0,0x70,0x28,0xF0,0x20,	/* 0x24 dollar '$' */
	0xC8,0xD0,0x20,0x58,0x98,0x00,	/* 0x25 percent '%' */
	0x60,0xD0,0x60,0xE8,0xD0,0x68,	/* 0x26 ampersand '&' */
	0x30,0x30,0x60,0x00,0x00,0x00,	/* 0x27 quotesingle ''' */
	0x30,0x60,0x60,0x60,0x30,0x00,	/* 0x28 parenleft '(' */
	0x60,0x30,0x30,0x30,0x60,0x00,	/* 0x29 parenright ')' */
	0x48,0x30,0x78,0x30,0x48,0x00,	/* 0x2A asterisk '*' */
	0x20,0x20,0xF8,0x20,0x20,0x00,	/* 0x2B plus '+' */
	0x00,0x00,0x00,0x30,0x30,0x60,	/* 0x2C comma ',' */
	0x00,0x00,0x78,0x00,0x00,0x00,	/* 0x2D hyphen '-' */
	0x00,0x00,0x00,0x30,0x30,0x00,	/* 0x2E period '.' */
	0x18,0x30,0x60,0xC0,0x80,0x00,	/* 0x2F slash '/' */
	0x70,0x98,0xA8,0xC8,0x70,0x00,	/* 0x30 zero '0' */
	0x10,0x30,0x10,0x10,0x10,0x00,	/* 0x31 one '1' */
	0xF0,0x08,0x70,0x80,0xF8,0x00,	/* 0x32 two '2' */
	0xF0,0x08,0x70,0x08,0xF0,0x00,	/* 0x33 three '3' */
	0x30,0x50,0x90,0xF8,0x10,0x00,	/* 0x34 four '4' */
	0xF0,0x80,0xF0,0x08,0xF0,0x00,	/* 0x35 five '5' */
	0x70,0x80,0xF0,0x88,0x70,0x00,	/* 0x36 six '6' */
	0xF8,0x08,0x10,0x20,0x20,0x00,	/* 0x37 seven '7' */
	0x70,0x88,0x70,0x88,0x70,0x00,	/* 0x38 eight '8' */
	0x70,0x88,0x78,0x08,0x70,0x00,	/* 0x39 nine '9' */
	0x30,0x30,0x00,0x30,0x30,0x00,	/* 0x3A colon ':' */
	0x30,0x30,0x00,0x30,0x10,0x20,	/* 0x3B semicolon ';' */
	0x18,0x30,0x60,0x30,0x18,0x00,	/* 0x3C less '<' */
	0x00,0x78,0x00,0x78,0x00,0x00,	/* 0x3D equal '=' */
	0x60,0x30,0x18,0x30,0x60,0x00,	/* 0x3E greater '>' */
	0x70,0x98,0x30,0x30,0x00,0x30,	/* 0x3F question '?' */
	0x70,0x88,0xB8,0xB0,0x80,0x78,	/* 0x40 at '@' */
	0x70,0x88,0xF8,0x88,0x88,0x00,	/* 0x41 A 'A' */
	0xF0,0x88,0xF0,0x88,0xF0,0x00,	/* 0x42 B 'B' */
	0x78,0x80,0x80,0x80,0x78,0x00,	/* 0x43 C 'C' */
	0xF0,0x88,0x88,0x88,0xF0,0x00,	/* 0x44 D 'D' */
	0xF8,0x80,0xF0,0x80,0xF8,0x00,	/* 0x45 E 'E' */
	0xF8,0x80,0xF0,0x80,0x80,0x00,	/* 0x46 F 'F' */
	0x78,0x80,0x98,0x88,0x78,0x00,	/* 0x47 G 'G' */
	0x88,0x88,0xF8,0x88,0x88,0x00,	/* 0x48 H 'H' */
	0x70,0x20,0x20,0x20,0x70,0x00,	/* 0x49 I 'I' */
	0x08,0x08,0x08,0x88,0x70,0x00,	/* 0x4A J 'J' */
	0x48,0x50,0x60,0x50,0x48,0x00,	/* 0x4B K 'K' */
	0x40,0x40,0x40,0x40,0x78,0x00,	/* 0x4C L 'L' */
	0x88,0xD8,0xA8,0x88,0x88,0x00,	/* 0x4D M 'M' */
	0x88,0xC8,0xA8,0x98,0x88,0x00,	/* 0x4E N 'N' */
	0x70,0x88,0x88,0x88,0x70,0x00,	/* 0x4F O 'O' */
	0xF0,0x88,0xF0,0x80,0x80,0x00,	/* 0x50 P 'P' */
	0x70,0x88,0x88,0x88,0x70,0x18,	/* 0x51 Q 'Q' */
	0xF0,0x88,0xF0,0xA0,0x98,0x00,	/* 0x52 R 'R' */
	0x78,0x80,0x70,0x08,0xF0,0x00,	/* 0x53 S 'S' */
	0xF8,0x20,0x20,0x20,0x20,0x00,	/* 0x54 T 'T' */
	0x88,0x88,0x88,0x88,0x78,0x00,	/* 0x55 U 'U' */
	0x88,0x88,0x88,0x50,0x20,0x00,	/* 0x56 V 'V' */
	0x88,0x88,0xA8,0xD8,0x88,0x00,	/* 0x57 W 'W' */
	0x88,0x50,0x20,0x50,0x88,0x00,	/* 0x58 X 'X' */
	0x88,0x88,0x50,0x20,0x20,0x00,	/* 0x59 Y 'Y' */
	0xF8,0x10,0x20,0x40,0xF8,0x00,	/* 0x5A Z 'Z' */
	0x78,0x60,0x60,0x60,0x78,0x00,	/* 0x5B bracketleft '[' */
	0xC0,0x60,0x30,0x18,0x08,0x00,	/* 0x5C backslash '\' */
	0x78,0x18,0x18,0x18,0x78,0x00,	/* 0x5D bracketright ']' */
	0x20,0x70,0xD8,0x00,0x00,0x00,	/* 0x5E asciicircum '^' */
	0x00,0x00,0x00,0x00,0x00,0xF8,	/* 0x5F underscore '_' */
	0x60,0x60,0x30,0x00,0x00,0x00,	/* 0x60 grave '`' */
	0x00,0x70,0x08,0xF8,0x78,0x00,	/* 0x61 a 'a' */
	0x80,0xF0,0x88,0x88,0xF0,0x00,	/* 0x62 b 'b' */
	0x00,0x70,0x80,0x80,0x70,0x00,	/* 0x63 c 'c' */
	0x08,0x78,0x88,0x88,0x78,0x00,	/* 0x64 d 'd' */
	0x00,0x70,0xF8,0x80,0x70,0x00,	/* 0x65 e 'e' */
	0x18,0x20,0x78,0x20,0x20,0x00,	/* 0x66 f 'f' */
	0x00,0x78,0x88,0x78,0x08,0xF0,	/* 0x67 g 'g' */
	0x80,0xB0,0xC8,0x88,0x88,0x00,	/* 0x68 h 'h' */
	0x00,0x60,0x20,0x20,0x70,0x00,	/* 0x69 i 'i' */
	0x10,0x10,0x10,0x10,0x10,0xE0,	/* 0x6A j 'j' */
	0x80,0x90,0xE0,0x90,0x88,0x00,	/* 0x6B k 'k' */
	0x60,0x20,0x20,0x20,0x70,0x00,	/* 0x6C l 'l' */
	0x00,0x50,0xF8,0xA8,0x88,0x00,	/* 0x6D m 'm' */
	0x00,0xF0,0x88,0x88,0x88,0x00,	/* 0x6E n 'n' */
	0x00,0x70,0x88,0x88,0x70,0x00,	/* 0x6F o 'o' */
	0x00,0xF0,0x88,0x88,0xF0,0x80,	/* 0x70 p 'p' */
	0x00,0x78,0x88,0x88,0x78,0x08,	/* 0x71 q 'q' */
	0x00,0x70,0x48,0x40,0x40,0x00,	/* 0x72 r 'r' */
	0x00,0x38,0x60,0x18,0x70,0x00,	/* 0x73 s 's' */
	0x20,0x70,0x20,0x20,0x10,0x00,	/* 0x74 t 't' */
	0x00,0x88,0x88,0x88,0x78,0x00,	/* 0x75 u 'u' */
	0x00,0x88,0x88,0x50,0x20,0x00,	/* 0x76 v 'v' */
	0x00,0x88,0xA8,0xA8,0xD8,0x00,	/* 0x77 w 'w' */
	0x00,0x48,0x30,0x30,0x48,0x00,	/* 0x78 x 'x' */
	0x00,0x88,0x88,0x78,0x08,0xF0,	/* 0x79 y 'y' */
	0x00,0x78,0x10,0x20,0x78,0x00,	/* 0x7A z 'z' */
	0x38,0x30,0x60,0x30,0x38,0x00,	/* 0x7B braceleft '{' */
	0x30,0x30,0x30,0x30,0x30,0x30,	/* 0x7C bar '|' */
	0x70,0x30,0x18,0x30,0x70,0x00,	/* 0x7D braceright '}' */
	0x40,0xE8,0xB8,0x10,0x00,0x00,	/* 0x7E asciitilde '~' */
	0x00,0x20,0x70,0xC8,0xF8,0x00,	/* 0x7F house '' */
};


const GFXglyph System08RegularRNormal6805454C60ATARISTGlyph[] PROGMEM = {

/* offset, bit-width, bit-height, advance cursor, x offset, y offset */
	{ 0, 8, 6, 6, 1, 0 }, /* 0x20 space ' ' */
	{ 6, 8, 6, 6, 1, 0 }, /* 0x21 exclam '!' */
	{ 12, 8, 6, 6, 1, 0 }, /* 0x22 quotedbl '"' */
	{ 18, 8, 6, 6, 1, 0 }, /* 0x23 numbersign '#' */
	{ 24, 8, 6, 6, 1, 0 }, /* 0x24 dollar '$' */
	{ 30, 8, 6, 6, 1, 0 }, /* 0x25 percent '%' */
	{ 36, 8, 6, 6, 1, 0 }, /* 0x26 ampersand '&' */
	{ 42, 8, 6, 6, 1, 0 }, /* 0x27 quotesingle ''' */
	{ 48, 8, 6, 6, 1, 0 }, /* 0x28 parenleft '(' */
	{ 54, 8, 6, 6, 1, 0 }, /* 0x29 parenright ')' */
	{ 60, 8, 6, 6, 1, 0 }, /* 0x2A asterisk '*' */
	{ 66, 8, 6, 6, 1, 0 }, /* 0x2B plus '+' */
	{ 72, 8, 6, 6, 1, 0 }, /* 0x2C comma ',' */
	{ 78, 8, 6, 6, 1, 0 }, /* 0x2D hyphen '-' */
	{ 84, 8, 6, 6, 1, 0 }, /* 0x2E period '.' */
	{ 90, 8, 6, 6, 1, 0 }, /* 0x2F slash '/' */
	{ 96, 8, 6, 6, 1, 0 }, /* 0x30 zero '0' */
	{ 102, 8, 6, 6, 1, 0 }, /* 0x31 one '1' */
	{ 108, 8, 6, 6, 1, 0 }, /* 0x32 two '2' */
	{ 114, 8, 6, 6, 1, 0 }, /* 0x33 three '3' */
	{ 120, 8, 6, 6, 1, 0 }, /* 0x34 four '4' */
	{ 126, 8, 6, 6, 1, 0 }, /* 0x35 five '5' */
	{ 132, 8, 6, 6, 1, 0 }, /* 0x36 six '6' */
	{ 138, 8, 6, 6, 1, 0 }, /* 0x37 seven '7' */
	{ 144, 8, 6, 6, 1, 0 }, /* 0x38 eight '8' */
	{ 150, 8, 6, 6, 1, 0 }, /* 0x39 nine '9' */
	{ 156, 8, 6, 6, 1, 0 }, /* 0x3A colon ':' */
	{ 162, 8, 6, 6, 1, 0 }, /* 0x3B semicolon ';' */
	{ 168, 8, 6, 6, 1, 0 }, /* 0x3C less '<' */
	{ 174, 8, 6, 6, 1, 0 }, /* 0x3D equal '=' */
	{ 180, 8, 6, 6, 1, 0 }, /* 0x3E greater '>' */
	{ 186, 8, 6, 6, 1, 0 }, /* 0x3F question '?' */
	{ 192, 8, 6, 6, 1, 0 }, /* 0x40 at '@' */
	{ 198, 8, 6, 6, 1, 0 }, /* 0x41 A 'A' */
	{ 204, 8, 6, 6, 1, 0 }, /* 0x42 B 'B' */
	{ 210, 8, 6, 6, 1, 0 }, /* 0x43 C 'C' */
	{ 216, 8, 6, 6, 1, 0 }, /* 0x44 D 'D' */
	{ 222, 8, 6, 6, 1, 0 }, /* 0x45 E 'E' */
	{ 228, 8, 6, 6, 1, 0 }, /* 0x46 F 'F' */
	{ 234, 8, 6, 6, 1, 0 }, /* 0x47 G 'G' */
	{ 240, 8, 6, 6, 1, 0 }, /* 0x48 H 'H' */
	{ 246, 8, 6, 6, 1, 0 }, /* 0x49 I 'I' */
	{ 252, 8, 6, 6, 1, 0 }, /* 0x4A J 'J' */
	{ 258, 8, 6, 6, 1, 0 }, /* 0x4B K 'K' */
	{ 264, 8, 6, 6, 1, 0 }, /* 0x4C L 'L' */
	{ 270, 8, 6, 6, 1, 0 }, /* 0x4D M 'M' */
	{ 276, 8, 6, 6, 1, 0 }, /* 0x4E N 'N' */
	{ 282, 8, 6, 6, 1, 0 }, /* 0x4F O 'O' */
	{ 288, 8, 6, 6, 1, 0 }, /* 0x50 P 'P' */
	{ 294, 8, 6, 6, 1, 0 }, /* 0x51 Q 'Q' */
	{ 300, 8, 6, 6, 1, 0 }, /* 0x52 R 'R' */
	{ 306, 8, 6, 6, 1, 0 }, /* 0x53 S 'S' */
	{ 312, 8, 6, 6, 1, 0 }, /* 0x54 T 'T' */
	{ 318, 8, 6, 6, 1, 0 }, /* 0x55 U 'U' */
	{ 324, 8, 6, 6, 1, 0 }, /* 0x56 V 'V' */
	{ 330, 8, 6, 6, 1, 0 }, /* 0x57 W 'W' */
	{ 336, 8, 6, 6, 1, 0 }, /* 0x58 X 'X' */
	{ 342, 8, 6, 6, 1, 0 }, /* 0x59 Y 'Y' */
	{ 348, 8, 6, 6, 1, 0 }, /* 0x5A Z 'Z' */
	{ 354, 8, 6, 6, 1, 0 }, /* 0x5B bracketleft '[' */
	{ 360, 8, 6, 6, 1, 0 }, /* 0x5C backslash '\' */
	{ 366, 8, 6, 6, 1, 0 }, /* 0x5D bracketright ']' */
	{ 372, 8, 6, 6, 1, 0 }, /* 0x5E asciicircum '^' */
	{ 378, 8, 6, 6, 1, 0 }, /* 0x5F underscore '_' */
	{ 384, 8, 6, 6, 1, 0 }, /* 0x60 grave '`' */
	{ 390, 8, 6, 6, 1, 0 }, /* 0x61 a 'a' */
	{ 396, 8, 6, 6, 1, 0 }, /* 0x62 b 'b' */
	{ 402, 8, 6, 6, 1, 0 }, /* 0x63 c 'c' */
	{ 408, 8, 6, 6, 1, 0 }, /* 0x64 d 'd' */
	{ 414, 8, 6, 6, 1, 0 }, /* 0x65 e 'e' */
	{ 420, 8, 6, 6, 1, 0 }, /* 0x66 f 'f' */
	{ 426, 8, 6, 6, 1, 0 }, /* 0x67 g 'g' */
	{ 432, 8, 6, 6, 1, 0 }, /* 0x68 h 'h' */
	{ 438, 8, 6, 6, 1, 0 }, /* 0x69 i 'i' */
	{ 444, 8, 6, 6, 1, 0 }, /* 0x6A j 'j' */
	{ 450, 8, 6, 6, 1, 0 }, /* 0x6B k 'k' */
	{ 456, 8, 6, 6, 1, 0 }, /* 0x6C l 'l' */
	{ 462, 8, 6, 6, 1, 0 }, /* 0x6D m 'm' */
	{ 468, 8, 6, 6, 1, 0 }, /* 0x6E n 'n' */
	{ 474, 8, 6, 6, 1, 0 }, /* 0x6F o 'o' */
	{ 480, 8, 6, 6, 1, 0 }, /* 0x70 p 'p' */
	{ 486, 8, 6, 6, 1, 0 }, /* 0x71 q 'q' */
	{ 492, 8, 6, 6, 1, 0 }, /* 0x72 r 'r' */
	{ 498, 8, 6, 6, 1, 0 }, /* 0x73 s 's' */
	{ 504, 8, 6, 6, 1, 0 }, /* 0x74 t 't' */
	{ 510, 8, 6, 6, 1, 0 }, /* 0x75 u 'u' */
	{ 516, 8, 6, 6, 1, 0 }, /* 0x76 v 'v' */
	{ 522, 8, 6, 6, 1, 0 }, /* 0x77 w 'w' */
	{ 528, 8, 6, 6, 1, 0 }, /* 0x78 x 'x' */
	{ 534, 8, 6, 6, 1, 0 }, /* 0x79 y 'y' */
	{ 540, 8, 6, 6, 1, 0 }, /* 0x7A z 'z' */
	{ 546, 8, 6, 6, 1, 0 }, /* 0x7B braceleft '{' */
	{ 552, 8, 6, 6, 1, 0 }, /* 0x7C bar '|' */
	{ 558, 8, 6, 6, 1, 0 }, /* 0x7D braceright '}' */
	{ 564, 8, 6, 6, 1, 0 }, /* 0x7E asciitilde '~' */
	{ 570, 8, 6, 6, 1, 0 }, /* 0x7F house '' */
};


const GFXfont System08RegularRNormal6805454C60ATARIST PROGMEM = {
	(uint8_t *)System08RegularRNormal6805454C60ATARISTBitmap,
	(GFXglyph *)System08RegularRNormal6805454C60ATARISTGlyph, 
	32, 127, 6 //ASCII start, ASCII stop,y Advance
};

