#include <Adafruit_GFX.h>

#ifndef ARDUINO
  #define PROGMEM
#endif

const uint8_t OhlfsRegularRNormal151207575P80ISO88591Bitmap[] PROGMEM = {	

	0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x80,	/* 0x21 exclam '!' */
	0x90,0x90,0x90,0x90,	/* 0x22 quotedbl '"' */
	0x14,0x14,0x14,0x7E,0x28,0x28,0xFC,0x50,0x50,0x50,	/* 0x23 numbersign '#' */
	0x20,0x20,0x78,0x88,0x80,0xC0,0x30,0x08,0x88,0xF0,0x20,0x20,0x20,	/* 0x24 dollar '$' */
	0x60,0x90,0x90,0x66,0x38,0xCC,0x12,0x12,0x0C,	/* 0x25 percent '%' */
	0x30,0x40,0x40,0x40,0xA8,0x90,0x98,0x64,	/* 0x26 ampersand '&' */
	0x80,0x80,0x80,0x80,	/* 0x27 quotesingle ''' */
	0x20,0x40,0x40,0x80,0x80,0x80,0x80,0x80,0x80,0x40,0x40,0x20,	/* 0x28 parenleft '(' */
	0x80,0x40,0x40,0x20,0x20,0x20,0x20,0x20,0x20,0x40,0x40,0x80,	/* 0x29 parenright ')' */
	0x54,0x28,0xEE,0x28,0x54,	/* 0x2A asterisk '*' */
	0x10,0x10,0x10,0xFE,0x10,0x10,0x10,	/* 0x2B plus '+' */
	0x60,0x60,0xC0,0x80,	/* 0x2C comma ',' */
	0xFC,	/* 0x2D hyphen '-' */
	0xC0,0xC0,	/* 0x2E period '.' */
	0x04,0x08,0x08,0x10,0x10,0x20,0x20,0x40,0x40,0x80,0x80,	/* 0x2F slash '/' */
	0x78,0x84,0x8C,0x94,0xA4,0xC4,0x84,0x84,0x84,0x78,	/* 0x30 zero '0' */
	0x20,0x60,0xA0,0x20,0x20,0x20,0x20,0x20,0x20,0xF8,	/* 0x31 one '1' */
	0x78,0x84,0x84,0x04,0x08,0x10,0x20,0x40,0x80,0xFC,	/* 0x32 two '2' */
	0x78,0x84,0x04,0x04,0x38,0x04,0x04,0x04,0x84,0x78,	/* 0x33 three '3' */
	0x18,0x28,0x28,0x48,0x48,0x88,0x88,0xFC,0x08,0x08,	/* 0x34 four '4' */
	0xFC,0x80,0x80,0x80,0xF8,0x04,0x04,0x04,0x84,0x78,	/* 0x35 five '5' */
	0x38,0x40,0x80,0x80,0xF8,0x84,0x84,0x84,0x84,0x78,	/* 0x36 six '6' */
	0xFC,0x04,0x04,0x08,0x08,0x08,0x10,0x10,0x10,0x10,	/* 0x37 seven '7' */
	0x78,0x84,0x84,0x84,0x78,0x84,0x84,0x84,0x84,0x78,	/* 0x38 eight '8' */
	0x78,0x84,0x84,0x84,0x84,0x7C,0x04,0x04,0x08,0x70,	/* 0x39 nine '9' */
	0xC0,0xC0,0x00,0x00,0x00,0xC0,0xC0,	/* 0x3A colon ':' */
	0x60,0x60,0x00,0x00,0x00,0x60,0x60,0xC0,0x80,	/* 0x3B semicolon ';' */
	0x06,0x18,0x60,0x80,0x60,0x18,0x06,	/* 0x3C less '<' */
	0xFE,0x00,0xFE,	/* 0x3D equal '=' */
	0xC0,0x30,0x0C,0x02,0x0C,0x30,0xC0,	/* 0x3E greater '>' */
	0x70,0x88,0x08,0x08,0x30,0x20,0x00,0x00,0x20,	/* 0x3F question '?' */
	0x38,0x44,0x84,0x9C,0xA4,0xA4,0x9C,0x80,0x40,0x38,	/* 0x40 at '@' */
	0x10,0x10,0x28,0x28,0x44,0x44,0x7C,0x82,0x82,0x82,	/* 0x41 A 'A' */
	0xF8,0x84,0x84,0x84,0xF8,0x84,0x84,0x84,0x84,0xF8,	/* 0x42 B 'B' */
	0x78,0x84,0x80,0x80,0x80,0x80,0x80,0x80,0x84,0x78,	/* 0x43 C 'C' */
	0xF0,0x88,0x84,0x84,0x84,0x84,0x84,0x84,0x88,0xF0,	/* 0x44 D 'D' */
	0xFC,0x80,0x80,0x80,0xF0,0x80,0x80,0x80,0x80,0xFC,	/* 0x45 E 'E' */
	0xFC,0x80,0x80,0x80,0xF0,0x80,0x80,0x80,0x80,0x80,	/* 0x46 F 'F' */
	0x78,0x84,0x80,0x80,0x9C,0x84,0x84,0x84,0x84,0x78,	/* 0x47 G 'G' */
	0x84,0x84,0x84,0x84,0xFC,0x84,0x84,0x84,0x84,0x84,	/* 0x48 H 'H' */
	0xF8,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xF8,	/* 0x49 I 'I' */
	0x08,0x08,0x08,0x08,0x08,0x08,0x88,0x88,0x88,0x70,	/* 0x4A J 'J' */
	0x84,0x84,0x88,0x90,0xA0,0xE0,0x90,0x88,0x84,0x84,	/* 0x4B K 'K' */
	0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0xFC,	/* 0x4C L 'L' */
	0x82,0xC6,0xC6,0xAA,0xAA,0x92,0x92,0x82,0x82,0x82,	/* 0x4D M 'M' */
	0x84,0xC4,0xC4,0xA4,0xA4,0x94,0x94,0x8C,0x8C,0x84,	/* 0x4E N 'N' */
	0x78,0x84,0x84,0x84,0x84,0x84,0x84,0x84,0x84,0x78,	/* 0x4F O 'O' */
	0xF8,0x84,0x84,0x84,0x84,0xF8,0x80,0x80,0x80,0x80,	/* 0x50 P 'P' */
	0x78,0x84,0x84,0x84,0x84,0x84,0x84,0x84,0xA4,0x78,0x10,0x0E,	/* 0x51 Q 'Q' */
	0xF8,0x84,0x84,0x84,0x84,0xF8,0x88,0x88,0x84,0x84,	/* 0x52 R 'R' */
	0x78,0x84,0x80,0x40,0x30,0x08,0x04,0x04,0x84,0x78,	/* 0x53 S 'S' */
	0xFE,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,	/* 0x54 T 'T' */
	0x84,0x84,0x84,0x84,0x84,0x84,0x84,0x84,0x84,0x78,	/* 0x55 U 'U' */
	0x82,0x82,0x82,0x44,0x44,0x44,0x28,0x28,0x10,0x10,	/* 0x56 V 'V' */
	0x82,0x82,0x92,0x92,0xAA,0xAA,0x44,0x44,0x44,0x44,	/* 0x57 W 'W' */
	0x84,0x84,0x48,0x48,0x30,0x48,0x48,0x84,0x84,0x84,	/* 0x58 X 'X' */
	0x82,0x82,0x82,0x44,0x28,0x28,0x10,0x10,0x10,0x10,	/* 0x59 Y 'Y' */
	0xFC,0x04,0x08,0x10,0x10,0x20,0x20,0x40,0x80,0xFC,	/* 0x5A Z 'Z' */
	0xE0,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0xE0,	/* 0x5B bracketleft '[' */
	0x80,0x40,0x40,0x20,0x20,0x10,0x10,0x08,0x08,0x04,0x04,	/* 0x5C backslash '\' */
	0xE0,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xE0,	/* 0x5D bracketright ']' */
	0x20,0x50,0x50,0x88,0x88,	/* 0x5E asciicircum '^' */
	0xFF,	/* 0x5F underscore '_' */
	0xC0,0x30,	/* 0x60 grave '`' */
	0x78,0x84,0x1C,0x64,0x84,0x8C,0x74,	/* 0x61 a 'a' */
	0x80,0x80,0xF0,0x88,0x84,0x84,0x84,0x88,0xF0,	/* 0x62 b 'b' */
	0x78,0x84,0x80,0x80,0x80,0x84,0x78,	/* 0x63 c 'c' */
	0x04,0x04,0x74,0x8C,0x84,0x84,0x84,0x8C,0x74,	/* 0x64 d 'd' */
	0x78,0x84,0x84,0xFC,0x80,0x84,0x78,	/* 0x65 e 'e' */
	0x1E,0x20,0xF8,0x20,0x20,0x20,0x20,0x20,0x20,	/* 0x66 f 'f' */
	0x74,0x8C,0x84,0x84,0x84,0x8C,0x74,0x04,0x08,0x70,	/* 0x67 g 'g' */
	0x80,0x80,0xB8,0xC4,0x84,0x84,0x84,0x84,0x84,	/* 0x68 h 'h' */
	0x20,0x20,0x00,0xE0,0x20,0x20,0x20,0x20,0x20,0xF8,	/* 0x69 i 'i' */
	0x10,0x10,0x00,0x78,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x10,0xE0,	/* 0x6A j 'j' */
	0x80,0x80,0x8C,0x90,0xA0,0xC0,0xA0,0x90,0x8C,	/* 0x6B k 'k' */
	0xE0,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xF8,	/* 0x6C l 'l' */
	0xA4,0xDA,0x92,0x92,0x92,0x92,0x92,	/* 0x6D m 'm' */
	0xB8,0xC4,0x84,0x84,0x84,0x84,0x84,	/* 0x6E n 'n' */
	0x78,0x84,0x84,0x84,0x84,0x84,0x78,	/* 0x6F o 'o' */
	0xF0,0x88,0x84,0x84,0x84,0x88,0xF0,0x80,0x80,0x80,	/* 0x70 p 'p' */
	0x74,0x8C,0x84,0x84,0x84,0x8C,0x74,0x04,0x04,0x04,	/* 0x71 q 'q' */
	0xCC,0x52,0x60,0x40,0x40,0x40,0xE0,	/* 0x72 r 'r' */
	0x78,0x84,0x80,0x78,0x04,0x84,0x78,	/* 0x73 s 's' */
	0x40,0x40,0xF8,0x40,0x40,0x40,0x40,0x44,0x38,	/* 0x74 t 't' */
	0x84,0x84,0x84,0x84,0x84,0x8C,0x74,	/* 0x75 u 'u' */
	0x84,0x84,0x84,0x48,0x48,0x30,0x30,	/* 0x76 v 'v' */
	0x82,0x82,0x92,0x92,0x54,0x6C,0x6C,	/* 0x77 w 'w' */
	0x84,0x84,0x48,0x30,0x48,0x84,0x84,	/* 0x78 x 'x' */
	0x84,0x84,0x84,0x84,0x84,0x44,0x38,0x08,0x30,0xC0,	/* 0x79 y 'y' */
	0xFC,0x08,0x10,0x20,0x40,0x80,0xFC,	/* 0x7A z 'z' */
	0x20,0x40,0x40,0x40,0x40,0x80,0x40,0x40,0x40,0x40,0x40,0x20,	/* 0x7B braceleft '{' */
	0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,	/* 0x7C bar '|' */
	0x80,0x40,0x40,0x40,0x40,0x20,0x40,0x40,0x40,0x40,0x40,0x80,	/* 0x7D braceright '}' */
	0x64,0x98,	/* 0x7E asciitilde '~' */
};


const GFXglyph OhlfsRegularRNormal151207575P80ISO88591Glyph[] PROGMEM = {

/* offset, bit-width, bit-height, advance cursor, x offset, y offset */
	{ 0, 0, 0, 8, 1, 12 }, /* 0x20 space 'No Bitmap Defined' */
	{ 0, 8, 9, 8, 4, 3 }, /* 0x21 exclam '!' */
	{ 9, 8, 4, 8, 3, 3 }, /* 0x22 quotedbl '"' */
	{ 13, 8, 10, 8, 1, 2 }, /* 0x23 numbersign '#' */
	{ 23, 8, 13, 8, 2, 1 }, /* 0x24 dollar '$' */
	{ 36, 8, 9, 8, 1, 3 }, /* 0x25 percent '%' */
	{ 45, 8, 8, 8, 1, 4 }, /* 0x26 ampersand '&' */
	{ 53, 8, 4, 8, 4, 3 }, /* 0x27 quotesingle ''' */
	{ 57, 8, 12, 8, 4, 2 }, /* 0x28 parenleft '(' */
	{ 69, 8, 12, 8, 3, 2 }, /* 0x29 parenright ')' */
	{ 81, 8, 5, 8, 1, 3 }, /* 0x2A asterisk '*' */
	{ 86, 8, 7, 8, 1, 4 }, /* 0x2B plus '+' */
	{ 93, 8, 4, 8, 3, 10 }, /* 0x2C comma ',' */
	{ 97, 8, 1, 8, 2, 7 }, /* 0x2D hyphen '-' */
	{ 98, 8, 2, 8, 4, 10 }, /* 0x2E period '.' */
	{ 100, 8, 11, 8, 2, 2 }, /* 0x2F slash '/' */
	{ 111, 8, 10, 8, 2, 2 }, /* 0x30 zero '0' */
	{ 121, 8, 10, 8, 2, 2 }, /* 0x31 one '1' */
	{ 131, 8, 10, 8, 2, 2 }, /* 0x32 two '2' */
	{ 141, 8, 10, 8, 2, 2 }, /* 0x33 three '3' */
	{ 151, 8, 10, 8, 2, 2 }, /* 0x34 four '4' */
	{ 161, 8, 10, 8, 2, 2 }, /* 0x35 five '5' */
	{ 171, 8, 10, 8, 2, 2 }, /* 0x36 six '6' */
	{ 181, 8, 10, 8, 2, 2 }, /* 0x37 seven '7' */
	{ 191, 8, 10, 8, 2, 2 }, /* 0x38 eight '8' */
	{ 201, 8, 10, 8, 2, 2 }, /* 0x39 nine '9' */
	{ 211, 8, 7, 8, 4, 5 }, /* 0x3A colon ':' */
	{ 218, 8, 9, 8, 3, 5 }, /* 0x3B semicolon ';' */
	{ 227, 8, 7, 8, 1, 4 }, /* 0x3C less '<' */
	{ 234, 8, 3, 8, 1, 6 }, /* 0x3D equal '=' */
	{ 237, 8, 7, 8, 1, 4 }, /* 0x3E greater '>' */
	{ 244, 8, 9, 8, 2, 3 }, /* 0x3F question '?' */
	{ 253, 8, 10, 8, 2, 3 }, /* 0x40 at '@' */
	{ 263, 8, 10, 8, 1, 2 }, /* 0x41 A 'A' */
	{ 273, 8, 10, 8, 2, 2 }, /* 0x42 B 'B' */
	{ 283, 8, 10, 8, 2, 2 }, /* 0x43 C 'C' */
	{ 293, 8, 10, 8, 2, 2 }, /* 0x44 D 'D' */
	{ 303, 8, 10, 8, 2, 2 }, /* 0x45 E 'E' */
	{ 313, 8, 10, 8, 2, 2 }, /* 0x46 F 'F' */
	{ 323, 8, 10, 8, 2, 2 }, /* 0x47 G 'G' */
	{ 333, 8, 10, 8, 2, 2 }, /* 0x48 H 'H' */
	{ 343, 8, 10, 8, 2, 2 }, /* 0x49 I 'I' */
	{ 353, 8, 10, 8, 2, 2 }, /* 0x4A J 'J' */
	{ 363, 8, 10, 8, 2, 2 }, /* 0x4B K 'K' */
	{ 373, 8, 10, 8, 2, 2 }, /* 0x4C L 'L' */
	{ 383, 8, 10, 8, 1, 2 }, /* 0x4D M 'M' */
	{ 393, 8, 10, 8, 2, 2 }, /* 0x4E N 'N' */
	{ 403, 8, 10, 8, 2, 2 }, /* 0x4F O 'O' */
	{ 413, 8, 10, 8, 2, 2 }, /* 0x50 P 'P' */
	{ 423, 8, 12, 8, 2, 2 }, /* 0x51 Q 'Q' */
	{ 435, 8, 10, 8, 2, 2 }, /* 0x52 R 'R' */
	{ 445, 8, 10, 8, 2, 2 }, /* 0x53 S 'S' */
	{ 455, 8, 10, 8, 1, 2 }, /* 0x54 T 'T' */
	{ 465, 8, 10, 8, 2, 2 }, /* 0x55 U 'U' */
	{ 475, 8, 10, 8, 1, 2 }, /* 0x56 V 'V' */
	{ 485, 8, 10, 8, 1, 2 }, /* 0x57 W 'W' */
	{ 495, 8, 10, 8, 2, 2 }, /* 0x58 X 'X' */
	{ 505, 8, 10, 8, 1, 2 }, /* 0x59 Y 'Y' */
	{ 515, 8, 10, 8, 2, 2 }, /* 0x5A Z 'Z' */
	{ 525, 8, 13, 8, 3, 1 }, /* 0x5B bracketleft '[' */
	{ 538, 8, 11, 8, 2, 2 }, /* 0x5C backslash '\' */
	{ 549, 8, 13, 8, 3, 1 }, /* 0x5D bracketright ']' */
	{ 562, 8, 5, 8, 2, 3 }, /* 0x5E asciicircum '^' */
	{ 567, 8, 1, 8, 1, 14 }, /* 0x5F underscore '_' */
	{ 568, 8, 2, 8, 3, 2 }, /* 0x60 grave '`' */
	{ 570, 8, 7, 8, 2, 5 }, /* 0x61 a 'a' */
	{ 577, 8, 9, 8, 2, 3 }, /* 0x62 b 'b' */
	{ 586, 8, 7, 8, 2, 5 }, /* 0x63 c 'c' */
	{ 593, 8, 9, 8, 2, 3 }, /* 0x64 d 'd' */
	{ 602, 8, 7, 8, 2, 5 }, /* 0x65 e 'e' */
	{ 609, 8, 9, 8, 1, 3 }, /* 0x66 f 'f' */
	{ 618, 8, 10, 8, 2, 5 }, /* 0x67 g 'g' */
	{ 628, 8, 9, 8, 2, 3 }, /* 0x68 h 'h' */
	{ 637, 8, 10, 8, 2, 2 }, /* 0x69 i 'i' */
	{ 647, 8, 13, 8, 2, 2 }, /* 0x6A j 'j' */
	{ 660, 8, 9, 8, 2, 3 }, /* 0x6B k 'k' */
	{ 669, 8, 9, 8, 2, 3 }, /* 0x6C l 'l' */
	{ 678, 8, 7, 8, 1, 5 }, /* 0x6D m 'm' */
	{ 685, 8, 7, 8, 2, 5 }, /* 0x6E n 'n' */
	{ 692, 8, 7, 8, 2, 5 }, /* 0x6F o 'o' */
	{ 699, 8, 10, 8, 2, 5 }, /* 0x70 p 'p' */
	{ 709, 8, 10, 8, 2, 5 }, /* 0x71 q 'q' */
	{ 719, 8, 7, 8, 1, 5 }, /* 0x72 r 'r' */
	{ 726, 8, 7, 8, 2, 5 }, /* 0x73 s 's' */
	{ 733, 8, 9, 8, 2, 3 }, /* 0x74 t 't' */
	{ 742, 8, 7, 8, 2, 5 }, /* 0x75 u 'u' */
	{ 749, 8, 7, 8, 2, 5 }, /* 0x76 v 'v' */
	{ 756, 8, 7, 8, 1, 5 }, /* 0x77 w 'w' */
	{ 763, 8, 7, 8, 2, 5 }, /* 0x78 x 'x' */
	{ 770, 8, 10, 8, 2, 5 }, /* 0x79 y 'y' */
	{ 780, 8, 7, 8, 2, 5 }, /* 0x7A z 'z' */
	{ 787, 8, 12, 8, 3, 2 }, /* 0x7B braceleft '{' */
	{ 799, 8, 11, 8, 4, 3 }, /* 0x7C bar '|' */
	{ 810, 8, 12, 8, 3, 2 }, /* 0x7D braceright '}' */
	{ 822, 8, 2, 8, 2, 7 }, /* 0x7E asciitilde '~' */
	{ 824, 0, 0, 0, 0, 0 }, /* 0x7F empty 'No Bitmap Defined' */
};


const GFXfont OhlfsRegularRNormal151207575P80ISO88591 PROGMEM = {
	(uint8_t *)OhlfsRegularRNormal151207575P80ISO88591Bitmap,
	(GFXglyph *)OhlfsRegularRNormal151207575P80ISO88591Glyph, 
	32, 127, 15 //ASCII start, ASCII stop,y Advance
};

