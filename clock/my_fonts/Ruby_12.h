

#ifndef ARDUINO
  #define PROGMEM
#endif

const uint8_t RubyRegularRNormal121207272P101ISO88591Bitmap[] PROGMEM = {	

	0x60,0xF0,0xF0,0x60,0x60,0x60,0x00,0x60,0x60,	/* 0x21 exclam '!' */
	0xCC,0xCC,0xCC,	/* 0x22 quotedbl '"' */
	0x63,0x00,0x63,0x00,0xFF,0x80,0x63,0x00,0x63,0x00,0xFF,0x80,0x63,0x00,0x63,0x00,	/* 0x23 numbersign '#' */
	0x18,0x18,0x7F,0xC0,0x7E,0x03,0xFE,0x18,0x18,	/* 0x24 dollar '$' */
	0x01,0x00,0xE3,0x00,0xE6,0x00,0x0C,0x00,0x18,0x00,0x33,0x80,0x63,0x80,0x40,0x00,	/* 0x25 percent '%' */
	0x3C,0x00,0x66,0x00,0x64,0x00,0x3B,0x00,0xCE,0x00,0xC6,0x00,0x7B,0x80,	/* 0x26 ampersand '&' */
	0x60,0x60,0xC0,	/* 0x27 quotesingle ''' */
	0x0E,0x10,0x60,0xC0,0xC0,0xC0,0x60,0x10,0x0E,	/* 0x28 parenleft '(' */
	0xE0,0x10,0x0C,0x06,0x06,0x06,0x0C,0x10,0xE0,	/* 0x29 parenright ')' */
	0x23,0x00,0x16,0x00,0xFF,0xC0,0x1A,0x00,0x31,0x00,	/* 0x2A asterisk '*' */
	0x18,0x18,0xFF,0x18,0x18,	/* 0x2B plus '+' */
	0x60,0x60,0xC0,	/* 0x2C comma ',' */
	0xFF,	/* 0x2D hyphen '-' */
	0xC0,0xC0,	/* 0x2E period '.' */
	0x00,0x40,0x00,0xC0,0x01,0x80,0x03,0x00,0x06,0x00,0x0C,0x00,0x18,0x00,0x30,0x00,0x60,0x00,0xC0,0x00,0x80,0x00,	/* 0x2F slash '/' */
	0x7F,0x00,0xC1,0x80,0xC3,0x80,0xC5,0x80,0xC9,0x80,0xD1,0x80,0xE1,0x80,0xC1,0x80,0x7F,0x00,	/* 0x30 zero '0' */
	0x30,0x70,0xF0,0x30,0x30,0x30,0x30,0x30,0xFC,	/* 0x31 one '1' */
	0x7C,0x86,0x03,0x06,0x0C,0x18,0x31,0x63,0xFF,	/* 0x32 two '2' */
	0x7E,0x83,0x03,0x03,0x0E,0x03,0x03,0x83,0x7C,	/* 0x33 three '3' */
	0x07,0x00,0x0F,0x00,0x1B,0x00,0x33,0x00,0x63,0x00,0xC3,0x00,0xFF,0x80,0x03,0x00,0x07,0x80,	/* 0x34 four '4' */
	0xFE,0xC0,0xC0,0xC0,0xFC,0x03,0x03,0x83,0x7E,	/* 0x35 five '5' */
	0x3C,0x00,0x40,0x00,0xC0,0x00,0xC0,0x00,0xDF,0x00,0xE1,0x80,0xC1,0x80,0x63,0x00,0x3E,0x00,	/* 0x36 six '6' */
	0xFF,0xC0,0xC1,0x80,0x83,0x00,0x06,0x00,0x0C,0x00,0x0C,0x00,0x0C,0x00,0x0C,0x00,0x0C,0x00,	/* 0x37 seven '7' */
	0x7F,0x00,0xC1,0x80,0x41,0x00,0x3E,0x00,0x41,0x00,0xC1,0x80,0xC1,0x80,0x41,0x00,0x3E,0x00,	/* 0x38 eight '8' */
	0x3E,0x00,0x63,0x00,0xC1,0x80,0xC3,0x80,0x7D,0x80,0x01,0x80,0x01,0x80,0x01,0x00,0x0E,0x00,	/* 0x39 nine '9' */
	0xC0,0xC0,0x00,0x00,0xC0,0xC0,	/* 0x3A colon ':' */
	0x60,0x60,0x00,0x00,0x60,0x60,0x80,	/* 0x3B semicolon ';' */
	0x0C,0x18,0x30,0x60,0xC0,0x60,0x30,0x18,0x0C,	/* 0x3C less '<' */
	0xFE,0x00,0x00,0xFE,	/* 0x3D equal '=' */
	0xC0,0x60,0x30,0x18,0x0C,0x18,0x30,0x60,0xC0,	/* 0x3E greater '>' */
	0x7C,0xC6,0x06,0x0C,0x18,0x18,0x00,0x18,0x18,	/* 0x3F question '?' */
	0x1F,0xE0,0x20,0x10,0x47,0x88,0xC8,0xCC,0xC3,0xCC,0xC4,0xCC,0xCC,0xCC,0xC7,0xF8,0x40,0x00,0x20,0x10,0x1F,0xE0,	/* 0x40 at '@' */
	0x04,0x00,0x0E,0x00,0x13,0x00,0x13,0x00,0x21,0x80,0x3F,0x80,0x40,0xC0,0x40,0xC0,0xE1,0xE0,	/* 0x41 A 'A' */
	0xFF,0x80,0x60,0xC0,0x60,0xC0,0x60,0xC0,0x7F,0x80,0x60,0xC0,0x60,0xC0,0x60,0xC0,0xFF,0x80,	/* 0x42 B 'B' */
	0x3F,0xA0,0x60,0x60,0xC0,0x20,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x20,0x60,0x40,0x3F,0x80,	/* 0x43 C 'C' */
	0xFF,0x00,0x61,0x80,0x60,0xC0,0x60,0xC0,0x60,0xC0,0x60,0xC0,0x60,0xC0,0x61,0x80,0xFF,0x00,	/* 0x44 D 'D' */
	0xFF,0x80,0x60,0x80,0x60,0x00,0x62,0x00,0x7E,0x00,0x62,0x00,0x60,0x00,0x60,0x80,0xFF,0x80,	/* 0x45 E 'E' */
	0xFF,0x80,0x60,0x80,0x60,0x00,0x62,0x00,0x7E,0x00,0x62,0x00,0x60,0x00,0x60,0x00,0xF0,0x00,	/* 0x46 F 'F' */
	0x3F,0xA0,0x60,0x60,0xC0,0x20,0xC0,0x00,0xC0,0x00,0xC0,0xF0,0xC0,0x60,0x60,0x60,0x3F,0xC0,	/* 0x47 G 'G' */
	0xF1,0xE0,0x60,0xC0,0x60,0xC0,0x60,0xC0,0x7F,0xC0,0x60,0xC0,0x60,0xC0,0x60,0xC0,0xF1,0xE0,	/* 0x48 H 'H' */
	0xF0,0x60,0x60,0x60,0x60,0x60,0x60,0x60,0xF0,	/* 0x49 I 'I' */
	0x07,0x80,0x03,0x00,0x03,0x00,0x03,0x00,0x03,0x00,0x03,0x00,0x03,0x00,0x83,0x00,0x7E,0x00,	/* 0x4A J 'J' */
	0xF1,0xC0,0x61,0x00,0x62,0x00,0x64,0x00,0x78,0x00,0x6C,0x00,0x66,0x00,0x63,0x00,0xF3,0xC0,	/* 0x4B K 'K' */
	0xF0,0x00,0x60,0x00,0x60,0x00,0x60,0x00,0x60,0x00,0x60,0x00,0x60,0x80,0x61,0x80,0xFF,0x80,	/* 0x4C L 'L' */
	0xE0,0x38,0x70,0x70,0x70,0x70,0x58,0xB0,0x58,0xB0,0x4D,0x30,0x4D,0x30,0x46,0x30,0xE6,0x78,	/* 0x4D M 'M' */
	0xC0,0xE0,0x60,0x40,0x70,0x40,0x78,0x40,0x5C,0x40,0x4E,0x40,0x47,0x40,0x43,0xC0,0xE1,0xC0,	/* 0x4E N 'N' */
	0x3F,0x80,0x60,0xC0,0xC0,0x60,0xC0,0x60,0xC0,0x60,0xC0,0x60,0xC0,0x60,0x60,0xC0,0x3F,0x80,	/* 0x4F O 'O' */
	0xFF,0x80,0x60,0xC0,0x60,0xC0,0x60,0xC0,0x7F,0x80,0x60,0x00,0x60,0x00,0x60,0x00,0xF0,0x00,	/* 0x50 P 'P' */
	0x3F,0x80,0x60,0xC0,0xC0,0x60,0xC0,0x60,0xC0,0x60,0xC0,0x60,0xC0,0x60,0x60,0xC0,0x3F,0x80,0x0C,0x00,0x06,0x00,0x01,0x80,	/* 0x51 Q 'Q' */
	0xFF,0x80,0x60,0xC0,0x60,0xC0,0x60,0xC0,0x7F,0x80,0x6C,0x00,0x66,0x00,0x63,0x00,0xF3,0xC0,	/* 0x52 R 'R' */
	0x1F,0x40,0x70,0xC0,0xE0,0x40,0x38,0x00,0x0E,0x00,0x03,0x80,0x81,0xC0,0xC3,0x80,0xBE,0x00,	/* 0x53 S 'S' */
	0xFF,0xF0,0xC6,0x30,0x86,0x10,0x06,0x00,0x06,0x00,0x06,0x00,0x06,0x00,0x06,0x00,0x0F,0x00,	/* 0x54 T 'T' */
	0xF1,0xE0,0x60,0x40,0x60,0x40,0x60,0x40,0x60,0x40,0x60,0x40,0x60,0x40,0x30,0x80,0x1F,0x00,	/* 0x55 U 'U' */
	0xF1,0xC0,0x60,0x80,0x60,0x80,0x31,0x00,0x31,0x00,0x1A,0x00,0x1A,0x00,0x0C,0x00,0x0C,0x00,	/* 0x56 V 'V' */
	0xF7,0xB8,0x63,0x10,0x63,0x10,0x63,0x10,0x35,0xA0,0x35,0xA0,0x35,0xA0,0x18,0xC0,0x18,0xC0,	/* 0x57 W 'W' */
	0xF1,0xC0,0x60,0x80,0x31,0x00,0x1A,0x00,0x0C,0x00,0x16,0x00,0x23,0x00,0x41,0x80,0xE1,0xC0,	/* 0x58 X 'X' */
	0xF1,0xC0,0x60,0x80,0x31,0x00,0x1A,0x00,0x0C,0x00,0x0C,0x00,0x0C,0x00,0x0C,0x00,0x1E,0x00,	/* 0x59 Y 'Y' */
	0xFF,0x80,0xC1,0x80,0x83,0x00,0x06,0x00,0x0C,0x00,0x18,0x00,0x30,0x80,0x61,0x80,0xFF,0x80,	/* 0x5A Z 'Z' */
	0xF8,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xF8,	/* 0x5B bracketleft '[' */
	0x80,0x00,0xC0,0x00,0x60,0x00,0x30,0x00,0x18,0x00,0x0C,0x00,0x06,0x00,0x03,0x00,0x01,0x80,0x00,0xC0,0x00,0x40,	/* 0x5C backslash '\' */
	0xF8,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0xF8,	/* 0x5D bracketright ']' */
	0x30,0x78,0xCC,	/* 0x5E asciicircum '^' */
	0xFF,0xFC,	/* 0x5F underscore '_' */
	0xE0,0x30,0x18,	/* 0x60 grave '`' */
	0x7E,0x00,0x83,0x00,0x3F,0x00,0x43,0x00,0xC3,0x00,0x7D,0x80,	/* 0x61 a 'a' */
	0xE0,0x00,0x60,0x00,0x60,0x00,0x6F,0x00,0x71,0x80,0x61,0x80,0x61,0x80,0x61,0x80,0x3F,0x00,	/* 0x62 b 'b' */
	0x7E,0xC3,0xC0,0xC0,0xC1,0x7E,	/* 0x63 c 'c' */
	0x07,0x00,0x03,0x00,0x03,0x00,0x7B,0x00,0xC7,0x00,0xC3,0x00,0xC3,0x00,0xC3,0x00,0x7D,0x80,	/* 0x64 d 'd' */
	0x7E,0xC3,0xFF,0xC0,0xC1,0x7E,	/* 0x65 e 'e' */
	0x1C,0x33,0x30,0xFC,0x30,0x30,0x30,0x30,0x78,	/* 0x66 f 'f' */
	0x3D,0x80,0x63,0x00,0x63,0x00,0x3E,0x00,0x40,0x00,0x3F,0x00,0x43,0x80,0xE1,0x00,0x7E,0x00,	/* 0x67 g 'g' */
	0xE0,0x00,0x60,0x00,0x60,0x00,0x6F,0x00,0x71,0x80,0x61,0x80,0x61,0x80,0x61,0x80,0xF3,0xC0,	/* 0x68 h 'h' */
	0x60,0x60,0x00,0xE0,0x60,0x60,0x60,0x60,0xF0,	/* 0x69 i 'i' */
	0x0C,0x0C,0x00,0x1C,0x0C,0x0C,0x0C,0x0C,0x0C,0x0C,0xD8,0x70,	/* 0x6A j 'j' */
	0xE0,0x00,0x60,0x00,0x63,0x80,0x62,0x00,0x64,0x00,0x78,0x00,0x6C,0x00,0x66,0x00,0xF7,0x80,	/* 0x6B k 'k' */
	0xE0,0x60,0x60,0x60,0x60,0x60,0x60,0x60,0xF0,	/* 0x6C l 'l' */
	0xDD,0xC0,0x66,0x60,0x66,0x60,0x66,0x60,0x66,0x60,0xEF,0x70,	/* 0x6D m 'm' */
	0xDF,0x00,0x61,0x80,0x61,0x80,0x61,0x80,0x61,0x80,0xF3,0xC0,	/* 0x6E n 'n' */
	0x7E,0xC3,0xC3,0xC3,0xC3,0x7E,	/* 0x6F o 'o' */
	0xEF,0x00,0x71,0x80,0x61,0x80,0x61,0x80,0x61,0x80,0x7F,0x00,0x60,0x00,0x60,0x00,0xF0,0x00,	/* 0x70 p 'p' */
	0x7E,0xC0,0xC3,0x00,0xC3,0x00,0xC3,0x00,0xC3,0x00,0x7F,0x00,0x03,0x00,0x03,0x00,0x0F,0x80,	/* 0x71 q 'q' */
	0xEF,0x00,0x71,0x80,0x60,0x00,0x60,0x00,0x60,0x00,0xF0,0x00,	/* 0x72 r 'r' */
	0x7C,0xC2,0x70,0x1C,0x86,0x7C,	/* 0x73 s 's' */
	0x10,0x30,0x30,0xFC,0x30,0x30,0x30,0x33,0x1E,	/* 0x74 t 't' */
	0xE3,0x80,0x61,0x80,0x61,0x80,0x61,0x80,0x61,0x80,0x3E,0xC0,	/* 0x75 u 'u' */
	0xF3,0x80,0x61,0x00,0x32,0x00,0x32,0x00,0x1C,0x00,0x08,0x00,	/* 0x76 v 'v' */
	0xE7,0x98,0x63,0x10,0x63,0x10,0x63,0x10,0x3D,0xE0,0x18,0xC0,	/* 0x77 w 'w' */
	0xF1,0xC0,0x31,0x00,0x1E,0x00,0x27,0x00,0x41,0x80,0xE3,0xC0,	/* 0x78 x 'x' */
	0xF1,0xC0,0x60,0x80,0x60,0x80,0x31,0x00,0x1A,0x00,0x0C,0x00,0x08,0x00,0x90,0x00,0xE0,0x00,	/* 0x79 y 'y' */
	0xFE,0x8C,0x18,0x30,0x62,0xFE,	/* 0x7A z 'z' */
	0x0F,0x18,0x18,0x18,0xF8,0x18,0x18,0x18,0x0F,	/* 0x7B braceleft '{' */
	0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,	/* 0x7C bar '|' */
	0xF0,0x18,0x18,0x18,0x0F,0x18,0x18,0x18,0xF0,	/* 0x7D braceright '}' */
	0x79,0x80,0xCF,0x00,	/* 0x7E asciitilde '~' */
	0xCC,0xCC,0x33,0x30,0xCC,0xCC,0x33,0x30,0xCC,0xCC,0x33,0x30,0xCC,0xCC,0x33,0x30,0xCC,0xCC,0x33,0x30,0xCC,0xCC,0x33,0x30,	/* 0x7F char7F '' */
};


const GFXglyph RubyRegularRNormal121207272P101ISO88591Glyph[] PROGMEM = {

/* offset, bit-width, bit-height, advance cursor, x offset, y offset */
	{ 0, 0, 0, 9, 10, 12 }, /* 0x20 space 'No Bitmap Defined' */
	{ 0, 8, 9, 5, 1, 0 }, /* 0x21 exclam '!' */
	{ 9, 8, 3, 7, 1, 0 }, /* 0x22 quotedbl '"' */
	{ 12, 16, 8, 10, 1, 0 }, /* 0x23 numbersign '#' */
	{ 28, 8, 9, 9, 1, 0 }, /* 0x24 dollar '$' */
	{ 37, 16, 8, 10, 1, 0 }, /* 0x25 percent '%' */
	{ 53, 16, 7, 10, 1, 2 }, /* 0x26 ampersand '&' */
	{ 67, 8, 3, 6, 2, 0 }, /* 0x27 quotesingle ''' */
	{ 70, 8, 9, 10, 2, 0 }, /* 0x28 parenleft '(' */
	{ 79, 8, 9, 10, 2, 0 }, /* 0x29 parenright ')' */
	{ 88, 16, 5, 11, 1, 2 }, /* 0x2A asterisk '*' */
	{ 98, 8, 5, 9, 1, 2 }, /* 0x2B plus '+' */
	{ 103, 8, 3, 6, 2, 7 }, /* 0x2C comma ',' */
	{ 106, 8, 1, 9, 1, 4 }, /* 0x2D hyphen '-' */
	{ 107, 8, 2, 5, 2, 7 }, /* 0x2E period '.' */
	{ 109, 16, 11, 13, 2, 0 }, /* 0x2F slash '/' */
	{ 131, 16, 9, 11, 2, 0 }, /* 0x30 zero '0' */
	{ 149, 8, 9, 8, 2, 0 }, /* 0x31 one '1' */
	{ 158, 8, 9, 9, 1, 0 }, /* 0x32 two '2' */
	{ 167, 8, 9, 9, 1, 0 }, /* 0x33 three '3' */
	{ 176, 16, 9, 10, 1, 0 }, /* 0x34 four '4' */
	{ 194, 8, 9, 9, 1, 0 }, /* 0x35 five '5' */
	{ 203, 16, 9, 10, 1, 0 }, /* 0x36 six '6' */
	{ 221, 16, 9, 11, 1, 0 }, /* 0x37 seven '7' */
	{ 239, 16, 9, 10, 1, 0 }, /* 0x38 eight '8' */
	{ 257, 16, 9, 10, 1, 0 }, /* 0x39 nine '9' */
	{ 275, 8, 6, 6, 2, 3 }, /* 0x3A colon ':' */
	{ 281, 8, 7, 7, 2, 3 }, /* 0x3B semicolon ';' */
	{ 288, 8, 9, 9, 2, 0 }, /* 0x3C less '<' */
	{ 297, 8, 4, 8, 1, 3 }, /* 0x3D equal '=' */
	{ 301, 8, 9, 9, 2, 0 }, /* 0x3E greater '>' */
	{ 310, 8, 9, 10, 2, 0 }, /* 0x3F question '?' */
	{ 319, 16, 11, 15, 1, 0 }, /* 0x40 at '@' */
	{ 341, 16, 9, 12, 1, 0 }, /* 0x41 A 'A' */
	{ 359, 16, 9, 11, 1, 0 }, /* 0x42 B 'B' */
	{ 377, 16, 9, 12, 1, 0 }, /* 0x43 C 'C' */
	{ 395, 16, 9, 11, 1, 0 }, /* 0x44 D 'D' */
	{ 413, 16, 9, 10, 1, 0 }, /* 0x45 E 'E' */
	{ 431, 16, 9, 10, 1, 0 }, /* 0x46 F 'F' */
	{ 449, 16, 9, 13, 1, 0 }, /* 0x47 G 'G' */
	{ 467, 16, 9, 12, 1, 0 }, /* 0x48 H 'H' */
	{ 485, 8, 9, 7, 2, 0 }, /* 0x49 I 'I' */
	{ 494, 16, 9, 11, 2, 0 }, /* 0x4A J 'J' */
	{ 512, 16, 9, 11, 1, 0 }, /* 0x4B K 'K' */
	{ 530, 16, 9, 10, 1, 0 }, /* 0x4C L 'L' */
	{ 548, 16, 9, 14, 1, 0 }, /* 0x4D M 'M' */
	{ 566, 16, 9, 12, 1, 0 }, /* 0x4E N 'N' */
	{ 584, 16, 9, 12, 1, 0 }, /* 0x4F O 'O' */
	{ 602, 16, 9, 11, 1, 0 }, /* 0x50 P 'P' */
	{ 620, 16, 12, 12, 1, 0 }, /* 0x51 Q 'Q' */
	{ 644, 16, 9, 11, 1, 0 }, /* 0x52 R 'R' */
	{ 662, 16, 9, 11, 1, 0 }, /* 0x53 S 'S' */
	{ 680, 16, 9, 13, 1, 0 }, /* 0x54 T 'T' */
	{ 698, 16, 9, 12, 1, 0 }, /* 0x55 U 'U' */
	{ 716, 16, 9, 11, 1, 0 }, /* 0x56 V 'V' */
	{ 734, 16, 9, 14, 1, 0 }, /* 0x57 W 'W' */
	{ 752, 16, 9, 11, 1, 0 }, /* 0x58 X 'X' */
	{ 770, 16, 9, 11, 1, 0 }, /* 0x59 Y 'Y' */
	{ 788, 16, 9, 10, 1, 0 }, /* 0x5A Z 'Z' */
	{ 806, 8, 12, 6, 1, 0 }, /* 0x5B bracketleft '[' */
	{ 818, 16, 11, 13, 2, 0 }, /* 0x5C backslash '\' */
	{ 840, 8, 12, 6, 1, 0 }, /* 0x5D bracketright ']' */
	{ 852, 8, 3, 9, 3, 0 }, /* 0x5E asciicircum '^' */
	{ 855, 16, 1, 14, 1, 10 }, /* 0x5F underscore '_' */
	{ 857, 8, 3, 6, 1, 0 }, /* 0x60 grave '`' */
	{ 860, 16, 6, 11, 2, 3 }, /* 0x61 a 'a' */
	{ 872, 16, 9, 10, 1, 0 }, /* 0x62 b 'b' */
	{ 890, 8, 6, 10, 2, 3 }, /* 0x63 c 'c' */
	{ 896, 16, 9, 10, 1, 0 }, /* 0x64 d 'd' */
	{ 914, 8, 6, 10, 2, 3 }, /* 0x65 e 'e' */
	{ 920, 8, 9, 9, 1, 0 }, /* 0x66 f 'f' */
	{ 929, 16, 9, 10, 1, 3 }, /* 0x67 g 'g' */
	{ 947, 16, 9, 11, 1, 0 }, /* 0x68 h 'h' */
	{ 965, 8, 9, 7, 2, 0 }, /* 0x69 i 'i' */
	{ 974, 8, 12, 7, 1, 0 }, /* 0x6A j 'j' */
	{ 986, 16, 9, 10, 1, 0 }, /* 0x6B k 'k' */
	{ 1004, 8, 9, 7, 2, 0 }, /* 0x6C l 'l' */
	{ 1013, 16, 6, 13, 1, 3 }, /* 0x6D m 'm' */
	{ 1025, 16, 6, 11, 1, 3 }, /* 0x6E n 'n' */
	{ 1037, 8, 6, 10, 2, 3 }, /* 0x6F o 'o' */
	{ 1043, 16, 9, 10, 1, 3 }, /* 0x70 p 'p' */
	{ 1061, 16, 9, 12, 2, 3 }, /* 0x71 q 'q' */
	{ 1079, 16, 6, 10, 1, 3 }, /* 0x72 r 'r' */
	{ 1091, 8, 6, 8, 1, 3 }, /* 0x73 s 's' */
	{ 1097, 8, 9, 11, 2, 0 }, /* 0x74 t 't' */
	{ 1106, 16, 6, 11, 1, 3 }, /* 0x75 u 'u' */
	{ 1118, 16, 6, 10, 1, 3 }, /* 0x76 v 'v' */
	{ 1130, 16, 6, 14, 1, 3 }, /* 0x77 w 'w' */
	{ 1142, 16, 6, 11, 1, 3 }, /* 0x78 x 'x' */
	{ 1154, 16, 9, 11, 1, 3 }, /* 0x79 y 'y' */
	{ 1172, 8, 6, 8, 1, 3 }, /* 0x7A z 'z' */
	{ 1178, 8, 9, 10, 2, 0 }, /* 0x7B braceleft '{' */
	{ 1187, 8, 12, 5, 2, 0 }, /* 0x7C bar '|' */
	{ 1199, 8, 9, 10, 2, 0 }, /* 0x7D braceright '}' */
	{ 1208, 16, 2, 10, 1, 0 }, /* 0x7E asciitilde '~' */
	{ 1212, 16, 12, 14, 1, 0 }, /* 0x7F char7F '' */
};


const GFXfont RubyRegularRNormal121207272P101ISO88591 PROGMEM = {
	(uint8_t *)RubyRegularRNormal121207272P101ISO88591Bitmap,
	(GFXglyph *)RubyRegularRNormal121207272P101ISO88591Glyph, 
	32, 127, 12 //ASCII start, ASCII stop,y Advance
};

